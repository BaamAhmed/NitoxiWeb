{"version":3,"sources":["src/context/createDataContext.js","src/navigationRef.js","src/api/tracker.js","src/context/AuthContext.js","src/hooks/useGetRecent.js","src/components/RecentActivity.js","src/hooks/useGlobalApi.js","src/components/NationalStats.js","src/components/IndividualStats.js","src/hooks/useGraphContent.js","src/components/Overview.js","src/components/RadioButton.js","src/components/QRcodeScanner.js","src/components/QRCodeModal.js","src/context/testContext.js","src/components/RealQuestions.js","src/components/ModalQuestions.js","src/components/GetTested.js","src/components/GlobalStats.js","src/components/DashPage.js","src/screens/dashboard.js","src/hooks/useRecord.js","src/components/TestListItem.js","src/screens/TestRecord.js","src/screens/RecentDetails.js","src/components/GenderPicker.js","src/screens/SignupScreen.js","src/screens/SigninScreen.js","src/components/TeamCard.js","src/components/Responses.js","src/components/PositiveVer.js","src/components/NegativeVer.js","src/screens/TestShow.js","src/components/rightIcon.js","src/components/leftIcon.js","src/screens/QuestionsScreen.js","src/screens/CameraScreen.js","src/components/GlobalModule.js","src/components/StatsModule.js","src/screens/StatsScreen.js","src/screens/AccountScreen.js","src/hooks/useUserInfo.js","src/screens/AboutScreen.js","src/screens/IntroScreen.js","src/screens/GraphScreen.js","src/hooks/usePieContent.js","src/screens/SideBar.js","App.js"],"names":["navigator","reducer","actions","defaultValue","Context","React","createContext","Provider","children","useReducer","state","dispatch","boundActions","key","value","axios","create","baseURL","navigate","routeName","params","NavigationActions","createDataContext","action","type","errorMessage","payload","token","signup","a","async","values","setButtonLoading","trackerApi","post","response","AsyncStorage","setItem","data","console","log","signin","email","password","buttonLoading","signout","removeItem","tryLocalSignin","getItem","useState","error","setError","recent","setRecent","screenWidth","Dimensions","get","width","screenHeight","height","styles","StyleSheet","viewStyle","backgroundColor","borderRadius","marginTop","padding","headingStyle","fontWeight","fontSize","color","percentageStyle","position","buttonStyle","captionStyle","textAlign","alignSelf","lastTestedStyle","marginBottom","RecentActivity","perc","doRefresh","setDoRefresh","navigation","useContext","AuthContext","useGetRecent","findRecent","useEffect","percentage","View","style","flexDirection","justifyContent","alignContent","Text","TouchableOpacity","onPress","param","_id","alignItems","labels","strokeWidth","radius","chartConfig","backgroundGradientFrom","backgroundGradientFromOpacity","backgroundGradientTo","backgroundGradientToOpacity","opacity","barPercentage","useShadowColorFromDataset","hideLegend","testDay","testDate","setData","globalData","setGlobalData","country","headers","paddingVertical","flex","paddingLeft","statStyle","GlobalStats","useGlobalApi","findGlobal","paddingRight","ScrollView","horizontal","showsHorizontalScrollIndicator","pagingEnabled","contentContainerStyle","graphContent","setGraphContent","paddingHorizontal","Overview","useGraphContent","findGraphContent","datasets","yAxisSuffix","xAxisLabel","fromZero","bezier","paddingTop","decimalPlaces","labelColor","propsForDots","r","stroke","buttonTextStyle","unselected","marginRight","selected","RadioButton","setValue","fieldName","setNextQ","nextQ","yesStyle","setYesStyle","noStyle","setNoStyle","QRcodeScanner","newModalVisible","setNewModalVisible","hasPermission","setHasPermission","Camera","requestPermissionsAsync","status","barCodeScannerSettings","barCodeTypes","BarCodeScanner","BarCodeType","qr","onBarCodeRead","cancelStyle","subTextStyle","QRCodeModal","testId","new_test","Error","update_test","covidResult","testSchema","yup","qrcode","required","questionLabelStyle","questionStyle","questionView","marginVertical","idStyle","borderTopLeftRadius","borderBottomLeftRadius","scanButtonStyle","borderTopRightRadius","borderBottomRightRadius","errmsg","RealQuestions","authState","q6_1","setq6_1","waste","setwaste","showError","setShowError","paddingBottom","showsVerticalScrollIndicator","MaterialCommunityIcons","name","size","validationSchema","initialValues","q1","q2","q3","q4","q5","q6","q7","verified","onSubmit","formikProps","minimumValue","maximumValue","minimumTrackTintColor","maximumTrackTintColor","onSlidingComplete","setFieldValue","step","TextInput","onChangeText","text","placeholder","window","open","FontAwesome","errors","handleSubmit","Ionicons","GetTested","findActualGlobal","recentActivityStyle","statsStripStyle","graphStyle","statsStyle","getTestedStyle","margin","DashPage","onRefresh","useCallback","timeout","setRefreshing","Promise","resolve","setTimeout","then","refreshing","refreshControl","RefreshControl","enabled","NationalStats","dashboard","oneTest","setOneTest","results","setResults","containerStyle","dayStyle","dateStyle","percentStyleRed","percentStyleYellow","percentStyleGreen","TestListItem","percentStyle","item","TestRecord","useRecord","searchApi","FlatList","keyExtractor","Math","random","toString","renderItem","genderInput","marginHorizontal","buttonLabelStyle","selectedButtonStyle","GenderPicker","maleButton","setMaleButton","femaleButton","setFemaleButton","otherButton","setOtherButton","signupSchema","min","firstName","lastName","SignupScreen","inputGroup","moveUp","setMoveUp","LinearGradient","colors","emblem","subHeading","errormsg","gender","age","onFocus","inputGroupFocused","onEndEditing","placeholderTextColor","input","handleChange","label","autoCorrect","marginLeft","keyboardType","autoCapitalize","secureTextEntry","titleStyle","submit","loading","title","textDecorationLine","navigationOptions","headerShown","letterSpacing","bottom","SigninScreen","setEmail","setPassword","iconUnfocused","textContentType","globalAlign","subtextStyle","answerStyle","Responses","textStyle","PositiveVer","AntDesign","defaultStyle","selectedStyle","labelStyle","submitStyle","submitLabelStyle","NegativeVer","setShow","show","TestContext","setCovidResult","positive","setPositive","negative","setNegative","containerStyleRow","headingStyleRed","headingStyleYellow","headingStyleGreen","centerPercentStyleRed","centerPercentStyleYellow","centerPercentStyleGreen","supportingParaStyle","TestShow","heading","supportingPara","centerPercentStyle","findOneTest","getParam","undefined","RightIcon","LeftIcon","openDrawer","QuestionsScreen","CameraScreen","StatsModule","charAt","toUpperCase","slice","StatsScreen","GlobalModule","logoutButton","logoutButtonLabel","AccountScreen","user","setUser","useUserInfo","findUser","paraStyle","TeamCard","rowDir","flexAlign","image","align","Image","source","uri","AboutScreen","IntroScreen","GraphScreen","pieError","safe","danger","warning","pieContent","setPieContent","usePieContent","findPieContent","pieData","population","legendFontColor","legendFontSize","showValuesOnTopOfBars","verticalLabelRotation","hasLegend","accessor","center","SideBar","props","SafeAreaView","itemsContainerStyle","itemStyle","activeBackgroundColor","defaultNavOptions","headerStyle","headerTitleStyle","headerBackTitleStyle","headerBackTitle","headerLeft","headerRight","navOptions","switchNavigator","createSwitchNavigator","loginFlow","createStackNavigator","Signin","Signup","Intro","loggedinFlow","createDrawerNavigator","HOME","Dashboard","screen","dashboardScreen","Questions","defaultNavigationOptions","TESTS","testRecordScreen","TestShowScreen","ACCOUNT","Account","ABOUT","About","STATISTICS","Statistics","GRAPHS","Graphs","drawerType","contentComponent","drawerLockMode","App","createAppContainer","ref"],"mappings":"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","file":"static/js/app.34ccd542.chunk.js","sourcesContent":["import React, {useReducer} from 'react'\r\nexport default (reducer, actions, defaultValue)=> {\r\n    const Context = React.createContext()\r\n    \r\n    const Provider = ({children}) => {\r\n        const [state, dispatch] = useReducer(reducer, defaultValue)\r\n        const boundActions = {}\r\n        for (let key in actions) {\r\n            boundActions[key] = actions[key](dispatch)\r\n        }\r\n\r\n        return (\r\n            <Context.Provider value={{state, ...boundActions}}>\r\n                {children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n\r\n    return {Context, Provider}\r\n}","import {NavigationActions} from 'react-navigation'\r\nimport {DrawerActions} from 'react-navigation-drawer'\r\n\r\nlet navigator\r\n\r\nexport const setNavigator = (nav) => {\r\n    navigator = nav\r\n}\r\n\r\nexport const navigate = (routeName, params) => {\r\n    navigator.dispatch(NavigationActions.navigate({\r\n        routeName,\r\n        params\r\n    }))\r\n}\r\n\r\nexport const drawerOpen = () => {\r\n    navigator.dispatch(DrawerActions.openDrawer())\r\n}","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n    // baseURL: 'https://protected-beach-37789.herokuapp.com/'\r\n    // baseURL: 'https://evening-citadel-84623.herokuapp.com'\r\n    baseURL: 'https://secret-harbor-19884.herokuapp.com/'\r\n})","import createDataContext from './createDataContext'\r\nimport trackerApi from '../api/tracker'\r\nimport {useState} from 'react'\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\r\nimport {navigate} from '../navigationRef'\r\n\r\n\r\nconst authReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'add_error':\r\n            return {...state, errorMessage: action.payload}\r\n        case 'signin':\r\n            return {errorMessage: '', token: action.payload}\r\n        case 'signout':\r\n            return {token:null, errorMessage:''}\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nconst tryLocalSignin = dispatch => async () => {\r\n    const token = await AsyncStorage.getItem('token')\r\n    if (token) {\r\n        dispatch ({type: 'signin', payload: token})\r\n        navigate('loggedinFlow')\r\n    } else {\r\n        navigate('loginFlow')\r\n    }\r\n}\r\n\r\nconst signup = (dispatch) => {\r\n    return async ({values, setButtonLoading})=> {\r\n        try {\r\n            const response = await trackerApi.post('/nitoxisignup', values)\r\n            await setButtonLoading(false)\r\n            await AsyncStorage.setItem('token', response.data.token)\r\n            dispatch({type: 'signin', payload: response.data.token})\r\n            navigate('Intro')\r\n        } catch (err){\r\n\r\n            dispatch({type: 'add_error', payload: 'Oops, something went wrong.'})\r\n            console.log(err)\r\n            await setButtonLoading(false)\r\n\r\n        }\r\n    }\r\n}\r\n\r\nconst signin = (dispatch) => {\r\n    return async ({email, password, buttonLoading, setButtonLoading})=> {\r\n        try {\r\n            const response = await  trackerApi.post('/nitoxisignin', {email, password})\r\n            await setButtonLoading(false)\r\n            await AsyncStorage.setItem('token', response.data.token)\r\n            dispatch({type: 'signin', payload: response.data.token})\r\n            navigate('loggedinFlow')\r\n        } catch(err){\r\n            dispatch({\r\n                type: 'add_error',\r\n                payload:'Invalid email or password.'\r\n            })\r\n            console.log('Hello', err)\r\n            await setButtonLoading(false)\r\n        }\r\n    }\r\n}\r\n\r\nconst signout = (dispatch) => {\r\n    return async ()=> {\r\n        await AsyncStorage.removeItem('token')\r\n        dispatch({type:'signout'})\r\n        navigate('loginFlow')\r\n    }\r\n}\r\n\r\nexport const {Provider, Context } = createDataContext(\r\n    authReducer,\r\n    {signup, signin, signout, tryLocalSignin},\r\n    {token: null, errorMessage: ''}\r\n)","import trackerApi from '../api/tracker'\r\nimport {useState, useEffect} from 'react'\r\n\r\nexport default () => {\r\n    const [error, setError] = useState('')\r\n    const [recent, setRecent] = useState({})\r\n\r\n    const findRecent = async (token) => {\r\n        try {\r\n            const response = await trackerApi.post('/getrecent', {token})\r\n            setRecent(response.data)\r\n            // console.log('smth')\r\n            // console.log(response.data)\r\n        } catch (err) {\r\n            // console.log('err')\r\n            setError('Something went wrong')\r\n        }\r\n    }\r\n    return [findRecent, recent, error]\r\n}\r\n","import React, {useContext, useEffect} from 'react'\r\nimport {View, Text, StyleSheet, Dimensions, TouchableOpacity} from 'react-native'\r\nimport {LineChart, ProgressChart} from 'react-native-chart-kit'\r\nimport {Context as AuthContext} from '../context/AuthContext'\r\n// import { withNavigation } from \"react-navigation\"\r\nimport useGetRecent from '../hooks/useGetRecent'\r\n\r\nconst screenWidth = Dimensions.get(\"window\").width\r\nconst screenHeight = Dimensions.get(\"window\").height\r\n\r\nconst RecentActivity = ({doRefresh, setDoRefresh, navigation}) => {\r\n    const {state, signout} = useContext(AuthContext)\r\n\r\n    const [findRecent, recent, error] = useGetRecent()\r\n    useEffect(()=>{findRecent(state.token)},[])\r\n\r\n    if(doRefresh===true){\r\n        findRecent(state.token)\r\n        setDoRefresh(false)\r\n    }\r\n\r\n    let perc\r\n    if(recent.percentage){\r\n        perc = recent.percentage\r\n    } else {\r\n        perc = 1\r\n    }\r\n    \r\n    return(\r\n        <View style={styles.viewStyle}>\r\n            <View style={{flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center'}}>\r\n                <Text style={styles.headingStyle}>Recent Activity</Text>\r\n                \r\n                <TouchableOpacity onPress={()=> {navigation.navigate('TestShow',{param: recent._id})}}>\r\n                    <View style={{borderRadius: 10, backgroundColor: '#121212'}}>\r\n                        <Text style={styles.buttonStyle}>Details</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n                \r\n            </View>\r\n            <View style={{justifyContent: 'space-between', flexDirection: 'row'}}>\r\n                <View style={{justifyContent: 'center', alignItems: 'center'}}>\r\n                    {recent? <Text style={styles.percentageStyle}>{recent.percentage}%</Text>: null}\r\n                    {recent ? <ProgressChart\r\n                        data={{\r\n                            labels: [\"Positive\"],\r\n                            data: [perc/100]\r\n                        }}\r\n                        width={screenWidth * 0.4}\r\n                        height={screenHeight * 0.23}\r\n                        strokeWidth={22}\r\n                        radius={screenWidth * 0.17}\r\n                        chartConfig={{\r\n                            backgroundGradientFrom: \"#1E2923\",\r\n                            backgroundGradientFromOpacity: 0,\r\n                            backgroundGradientTo: \"#08130D\",\r\n                            backgroundGradientToOpacity: 0,\r\n                            color: (opacity = 1) => `rgba(164, 85, 224, ${opacity})`,\r\n                            strokeWidth: 4, // optional, default 3\r\n                            barPercentage: 1,\r\n                            useShadowColorFromDataset: false // optional\r\n                        }}\r\n                        hideLegend={true}\r\n                        \r\n                    />: <Text>Loading</Text>}\r\n\r\n                </View>\r\n                <View>\r\n                    <Text style={styles.captionStyle}>Probability of being positive</Text>\r\n                    <Text style={styles.lastTestedStyle}>Last tested on</Text>\r\n                    {recent ? <Text style={{color: 'white', textAlign: 'right'}}>{recent.testDay}, {recent.testDate}</Text>: <Text>Loading</Text>}\r\n                    <View style={{borderRadius: 10, backgroundColor: '#121212', alignSelf: 'flex-end', marginTop: 20}}>\r\n                        <TouchableOpacity onPress={()=> navigation.navigate(\"TestRecord\")}>\r\n                            <Text style={styles.buttonStyle} > View Test Record</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    viewStyle: {\r\n        backgroundColor: '#292929',\r\n        // height: screenHeight * 0.34,\r\n        borderRadius: 15,\r\n        marginTop: 10,\r\n        padding: 15\r\n    },\r\n    headingStyle: {\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        color: 'white',\r\n    },\r\n    percentageStyle: {\r\n        position: 'absolute',\r\n        // top: screenHeight * 0.1, \r\n        // left: screenWidth * 0.15,\r\n        fontWeight: 'bold',\r\n        color: '#a455e0',\r\n        fontSize: 30\r\n    },\r\n    buttonStyle: {\r\n        color: 'white',\r\n        padding: 10,\r\n        borderRadius: 3\r\n    },\r\n    captionStyle: {\r\n        fontWeight: 'bold',\r\n        width: screenWidth* 0.35,\r\n        textAlign: 'right',\r\n        alignSelf: 'flex-end',\r\n        marginTop: screenHeight * 0.025,\r\n        color:\"#a455e0\"\r\n    },\r\n    lastTestedStyle: {\r\n        fontWeight: 'bold',\r\n        width: screenWidth* 0.35,\r\n        textAlign: 'right',\r\n        alignSelf: 'flex-end',\r\n        marginTop: screenHeight * 0.03,\r\n        marginBottom: screenHeight * 0.01,\r\n        color:\"white\"\r\n    }\r\n})\r\n\r\nexport default RecentActivity","import trackerApi from '../api/tracker'\r\nimport {useState, useEffect} from 'react'\r\n\r\nexport default () => {\r\n    const [data, setData] = useState({})\r\n    const [globalData, setGlobalData] = useState({})\r\n\r\n    const findGlobal = async (country)=> {\r\n        try {\r\n            const response = await trackerApi.get(`https://covid-19-tracking.p.rapidapi.com/v1/${country}`,\r\n            {\r\n                headers: {\r\n                    'x-rapidapi-key': '17dbba6358msh6ad792d0535cfdbp15aac1jsn4326dabeeb5c',\r\n                    'x-rapidapi-host': 'covid-19-tracking.p.rapidapi.com'\r\n                }\r\n            })\r\n            setData(response.data)\r\n            // console.log(response.data)\r\n        } catch (err) {\r\n            console.log('smth')\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const findActualGlobal = async () => {\r\n        try {\r\n            const response = await trackerApi.get('https://covid-19-tracking.p.rapidapi.com/v1',\r\n            {\r\n                headers: {\r\n                    'x-rapidapi-key': '17dbba6358msh6ad792d0535cfdbp15aac1jsn4326dabeeb5c',\r\n                    'x-rapidapi-host': 'covid-19-tracking.p.rapidapi.com'\r\n                }\r\n            })\r\n            setGlobalData(response.data[0])\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    return [data, findGlobal, globalData, findActualGlobal]\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport {View, Text, StyleSheet, Dimensions, ScrollView, TouchableOpacity} from 'react-native'\r\nimport useGlobalApi from '../hooks/useGlobalApi'\r\n\r\n\r\nconst screenHeight = Dimensions.get(\"window\").height\r\nconst screenWidth = Dimensions.get(\"window\").width\r\n\r\nconst GlobalStats = ({style}) => {\r\n    const [data, findGlobal] = useGlobalApi()\r\n    useEffect(()=>{\r\n        findGlobal('pakistan')\r\n    },[])\r\n    return (\r\n        <View style={style}>\r\n            <View  style={styles.viewStyle}>\r\n                <View>\r\n                    <View style={{flexDirection: 'row', justifyContent: 'space-between'}}>\r\n                        <Text style={styles.headingStyle}>Statistics within Pakistan</Text>\r\n                        <Text style={{color: 'white', opacity: 0.3, paddingRight: 15}}>(swipe)</Text>\r\n                    </View>\r\n                    <ScrollView horizontal showsHorizontalScrollIndicator={false} pagingEnabled contentContainerStyle={{flexDirection: 'row', width: screenWidth - 10}}>\r\n                        {/* <View style={{width: screenWidth*0.975, paddingLeft: 15}}>\r\n                            {data? <Text style={styles.statStyle}>{data['Active Cases_text']}</Text>: <Text style={styles.statStyle}>Loading</Text>}\r\n                            <Text style={styles.captionStyle}>Active cases</Text>\r\n                        </View> */}\r\n                        <View style={{width: screenWidth*0.975, paddingLeft: 15}}>\r\n                            {data? <Text style={styles.statStyle}>{data['Total Cases_text']}</Text>: <Text style={styles.statStyle}>Loading</Text>}\r\n                            <Text style={styles.captionStyle}>Total cases recorded (all-time)</Text>\r\n                        </View>\r\n                        <View style={{width: screenWidth*0.975, paddingLeft: 15}}>\r\n                            {data? <Text style={styles.statStyle}>{data['Total Recovered_text']}</Text>: <Text style={styles.statStyle}>Loading</Text>}\r\n                            <Text style={styles.captionStyle}>Total recoveries recorded (all-time)</Text>\r\n                        </View>\r\n                        {/* <View style={{width: screenWidth*0.975, paddingLeft: 15}}>\r\n                            {data? <Text style={styles.statStyle}>{data['New Cases_text']}</Text>: <Text style={styles.statStyle}>Loading</Text>}\r\n                            <Text style={styles.captionStyle}>New cases recorded recently</Text>\r\n                        </View>\r\n                        <View style={{width: screenWidth*0.975, paddingLeft: 15}}>\r\n                            {data? <Text style={styles.statStyle}>{data['New Deaths_text']}</Text>: <Text>Loading</Text>}\r\n                            <Text style={styles.captionStyle}>New deaths recorded recently</Text>\r\n                        </View> */}\r\n                    </ScrollView>\r\n                </View>\r\n                \r\n            </View>\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    viewStyle: {\r\n        paddingVertical: 15,\r\n        flex: 1\r\n    },\r\n    headingStyle: {\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        color: 'white',\r\n        paddingLeft: 15\r\n        // marginBottom: screenHeight * 0.007\r\n    },\r\n    statStyle: {\r\n        color: '#4489E3',\r\n        fontWeight: 'bold',\r\n        fontSize: 50\r\n    },\r\n    captionStyle: {\r\n        color: 'white',\r\n        // width: screenWidth * 0.35\r\n    }\r\n})\r\n\r\nexport default GlobalStats","import React from 'react'\r\nimport {View, Text, StyleSheet, Dimensions, ScrollView} from 'react-native'\r\nconst screenHeight = Dimensions.get(\"window\").height\r\nconst screenWidth = Dimensions.get(\"window\").width\r\n\r\n\r\nconst IndividualStats = () => {\r\n    return (\r\n        <View style={styles.viewStyle}>\r\n            <View style={{flexDirection: 'row', justifyContent: 'space-between'}}>\r\n                <Text style={styles.headingStyle}>Individual</Text>\r\n                <Text style={{color: 'white', opacity: 0.3}}>(swipe)</Text>\r\n            </View>\r\n            <ScrollView horizontal showsHorizontalScrollIndicator={false} pagingEnabled>\r\n                <View>\r\n                    <Text style={styles.statStyle}>32</Text>\r\n                    <Text style={styles.captionStyle}>NITOXI tests carried out so far</Text>\r\n                </View>\r\n                <View>\r\n                    <Text style={styles.statStyle}>67%</Text>\r\n                    <Text style={styles.captionStyle}>Average positivity probability</Text>\r\n                </View>\r\n                <View>\r\n                    <Text style={styles.statStyle}>3</Text>\r\n                    <Text style={styles.captionStyle}>Tests resulting in 90% positivity probability</Text>\r\n                </View>\r\n            </ScrollView>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    viewStyle: {\r\n        padding: screenWidth * 0.036,\r\n        flex: 1\r\n    },\r\n    headingStyle: {\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        color: 'white',\r\n        // marginBottom: screenHeight * 0.007\r\n    },\r\n    statStyle: {\r\n        color: '#D89632',\r\n        fontWeight: 'bold',\r\n        fontSize: 50\r\n    },\r\n    captionStyle: {\r\n        color: 'white',\r\n        width: screenWidth * 0.4\r\n    }\r\n})\r\n\r\nexport default IndividualStats","import trackerApi from '../api/tracker'\r\nimport {useState, useEffect} from 'react'\r\n\r\nexport default () => {\r\n    const [error, setError] = useState('')\r\n    const [graphContent, setGraphContent] = useState([1,1,1,1])\r\n\r\n    const findGraphContent = async (token) => {\r\n        try {\r\n            const response = await trackerApi.post('/getgraphcontent', {token})\r\n            setGraphContent(response.data)\r\n        } catch (err) {\r\n            setError('Something went wrong')\r\n        }\r\n    }\r\n    return [findGraphContent, graphContent, error]\r\n}\r\n","import React, { useEffect, useContext } from 'react'\r\nimport { TouchableOpacity } from 'react-native'\r\nimport { Touchable } from 'react-native'\r\nimport {View, Text, StyleSheet} from 'react-native'\r\nimport {LineChart} from \"react-native-chart-kit\";\r\nimport { Dimensions } from \"react-native\";\r\nconst screenWidth = Dimensions.get(\"window\").width;\r\nimport useGraphContent from '../hooks/useGraphContent'\r\nimport {Context as AuthContext} from '../context/AuthContext'\r\n\r\n\r\nconst Overview = ({doRefresh, setDoRefresh, style, navigation}) => {\r\n    const {state} = useContext(AuthContext)\r\n    const [findGraphContent, graphContent, error] = useGraphContent()\r\n    useEffect(()=>{findGraphContent(state.token)},[])\r\n\r\n    let data = {}\r\n    if(graphContent){\r\n        data = {\r\n           labels: [],\r\n           datasets: [\r\n             {\r\n               data: graphContent,\r\n               color: (opacity = 0.2) => `rgba(134, 65, 244, 1)`, // optional\r\n               strokeWidth: 2 // optional\r\n             }\r\n           ]\r\n         };\r\n    } else {\r\n        data = {\r\n            labels: [],\r\n            datasets: [\r\n              {\r\n                data: [1,1,1,1],\r\n                color: (opacity = 0.2) => `rgba(134, 65, 244, 1)`, // optional\r\n                strokeWidth: 2 // optional\r\n              }\r\n            ]\r\n          };\r\n    }\r\n\r\n    if (doRefresh === true) {\r\n        findGraphContent(state.token)\r\n        setDoRefresh(false)\r\n    }\r\n    return (\r\n        <View style={style}>\r\n            <View>\r\n                <View style={{flexDirection: 'row', justifyContent: 'space-between', marginBottom: 10}}>\r\n                    <Text style={styles.headingStyle}>Overview</Text>\r\n                    <TouchableOpacity onPress={()=>{navigation.navigate('GRAPHS')}}>\r\n                        <View style={styles.buttonStyle}>\r\n                            <Text style={{color: 'white'}}>See More</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                    \r\n                </View>\r\n                <View style={{justifyContent: 'center', alignItems :'center'}}>\r\n                    {graphContent?<LineChart\r\n                        yAxisSuffix={'%'}\r\n                        xAxisLabel={\"Tests\"}\r\n                        // hidePointsAtIndex={[0,3]}\r\n                        // yAxisInterval={\"100\"}\r\n                        fromZero\r\n                        bezier\r\n                        data={data}\r\n                        width={screenWidth*0.90}\r\n                        height={220}\r\n                        style={{borderRadius: 15, backgroundColor: '#141414', paddingTop: 20, marginBottom: -20}}\r\n                        chartConfig={{\r\n                            \r\n                            backgroundColor: \"#e26a00\",\r\n                            backgroundGradientFrom: \"#141414\",\r\n                            backgroundGradientFromOpacity: 0,\r\n                            backgroundGradientToOpacity: 0,\r\n                            backgroundGradientTo: \"#141414\",\r\n                            decimalPlaces: 2, // optional, defaults to 2dp\r\n                            color: (opacity = 0.1) => `rgba(255, 255, 255, 0.5)`,\r\n                            labelColor: (opacity = 0.1) => `rgba(255, 255, 255, 0.5)`,\r\n                            style: {\r\n                            borderRadius: 10\r\n                            },\r\n                            propsForDots: {\r\n                            r: \"4\",\r\n                            strokeWidth: \"0\",\r\n                            stroke: \"#ffa726\"\r\n                            }\r\n                        }}\r\n                        />: <Text>Loading</Text>}\r\n                        <Text style={{color: 'white', opacity: 0.5}}>Recent Tests</Text>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    viewStyle: {\r\n        padding: 15\r\n    },\r\n    headingStyle: {\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        color: 'white'\r\n    },\r\n    buttonStyle: {\r\n        padding: 10,\r\n        paddingHorizontal: 15,\r\n        borderRadius: 10,\r\n        backgroundColor: '#1D1D1D'\r\n    }\r\n})\r\n\r\nexport default Overview","import React, {useState} from 'react'\r\nimport {View, Text, StyleSheet, TouchableOpacity, Dimensions} from 'react-native'\r\n\r\nconst screenWidth = Dimensions.get(\"window\").width\r\nconst screenHeight = Dimensions.get(\"window\").height\r\n\r\nconst RadioButton = ({value, setValue, fieldName, nextQ, setNextQ}) => {\r\n    const [yesStyle, setYesStyle] = useState(styles.unselected)\r\n    const [noStyle, setNoStyle] = useState(styles.unselected)\r\n    return (\r\n        <View style={styles.viewStyle}>\r\n            <TouchableOpacity onPress={()=> {\r\n                setValue(fieldName, true)\r\n                setYesStyle(styles.selected)\r\n                setNoStyle(styles.unselected)\r\n                setNextQ(true)\r\n            }}>\r\n                <View style={yesStyle}>\r\n                    <Text style={styles.buttonTextStyle}>Yes</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={()=> {\r\n                setValue(fieldName, false)\r\n                setYesStyle(styles.unselected)\r\n                setNoStyle(styles.selected)\r\n                setNextQ(false)\r\n            }}>\r\n                <View style={noStyle}>\r\n                    <Text style={styles.buttonTextStyle}>No</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles= StyleSheet.create({\r\n    buttonTextStyle: {\r\n        color: 'white',\r\n        fontSize: 18,\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 25\r\n    },\r\n    unselected: {\r\n        borderRadius: 10,\r\n        backgroundColor: '#444444',\r\n        marginRight: 20\r\n    },\r\n    selected: {\r\n        borderRadius: 10,\r\n        backgroundColor: '#111111',\r\n        marginRight: 20\r\n    },\r\n    viewStyle: {\r\n        paddingVertical: 10,\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start'\r\n    }\r\n})\r\n\r\nexport default RadioButton","import React, {useState, useEffect} from 'react'\r\nimport {View, Text, StyleSheet, Button} from 'react-native'\r\nimport { Camera} from 'expo-camera';\r\nimport * as Permissions from \"expo-permissions\";\r\nimport * as BarCodeScanner from 'expo-barcode-scanner'\r\n\r\n\r\nconst QRcodeScanner = ({value, setValue, newModalVisible, setNewModalVisible, navigation})=> {\r\n\r\n    const [hasPermission, setHasPermission] = useState(null);\r\n    const [scanned, setScanned] = useState(false);\r\n    \r\n\r\n    useEffect(() => {\r\n      (async () => {\r\n        const { status } = await Camera.requestPermissionsAsync();\r\n        // const { status } = await Permissions.askAsync(Permissions.CAMERA);\r\n        setHasPermission(status === 'granted');\r\n      })();\r\n    }, []);\r\n  \r\n    const handleBarCodeScanned = ({ type, data }) => {\r\n      setScanned(true);\r\n      setValue('qrcode', data)\r\n      navigation.navigate('Questions')\r\n    //   alert(`Bar code with type ${type} and data ${data} has been scanned!`);\r\n    };\r\n  \r\n    if (hasPermission === null) {\r\n      return <Text>Requesting for camera permission</Text>;\r\n    }\r\n    if (hasPermission === false) {\r\n      return <Text>No access to camera</Text>;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <View style={{flex: 1}}>\r\n            <Camera\r\n              // onCameraReady={Camera.resumePreview()}\r\n                    // onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n                    // autoFocus={}\r\n                    barCodeScannerSettings={{\r\n                      barCodeTypes: [BarCodeScanner.Constants.BarCodeType.qr],\r\n                    }}\r\n                    onBarCodeRead={()=> {navigation.navigate('Dashboard')}}\r\n                    style={{flex: 1}}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n})\r\n\r\nexport default QRcodeScanner","import React from 'react'\r\nimport {View, Text, StyleSheet, Dimensions} from 'react-native'\r\nimport { TouchableOpacity } from 'react-native-gesture-handler'\r\nimport QRcodeScanner from \"./QRcodeScanner\"\r\n\r\nconst screenWidth = Dimensions.get(\"window\").width\r\nconst screenHeight = Dimensions.get(\"window\").height\r\n\r\nconst QRCodeModal = ({value, setValue, navigation}) => {\r\n    return (\r\n        <View style={styles.viewStyle}>\r\n            <View style={{flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: screenHeight*0.02}}>\r\n                <Text style={styles.headingStyle}>Scan QR Code</Text>\r\n                <TouchableOpacity style={{borderRadius: 10}} onPress={()=> {setNewModalVisible(false)}}>\r\n                    <View style={{borderRadius: 8, backgroundColor: 'black'}}>\r\n                        <Text style={styles.cancelStyle}>Cancel</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <Text style={styles.subTextStyle}>Point your phone at the QR Code and wait for it to scan. Once scanned, this window will automatically close and the scanned ID will be visible in the appropriate field. If not, please attempt to scan again by pressing the 'scan' button.</Text>\r\n            <QRcodeScanner \r\n                value={value} \r\n                setValue={setValue}\r\n                navigation={navigation}\r\n    \r\n            />\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    viewStyle: {\r\n        paddingHorizontal: screenWidth * 0.07,\r\n        paddingTop: screenHeight * 0.04,\r\n        backgroundColor: \"#1F1F1F\",\r\n        flex: 1\r\n    },\r\n    headingStyle: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        fontSize: 30\r\n    }, \r\n    cancelStyle: {\r\n        color: '#8555D7',\r\n        fontSize: 17,\r\n        padding: screenWidth * 0.02\r\n    },\r\n    subTextStyle: {\r\n        color: 'white',\r\n        opacity: 0.5,\r\n        fontSize: 16,\r\n        marginBottom: 40\r\n    }\r\n})\r\n\r\nexport default QRCodeModal","import createDataContext from './createDataContext'\r\nimport trackerApi from '../api/tracker'\r\nimport {useState, useContext} from 'react'\r\nimport {navigate} from '../navigationRef'\r\nimport {withNavigation} from 'react-navigation'\r\nimport tracker from '../api/tracker'\r\n\r\nconst testReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'add_error':\r\n            return {testId: null, errorMessage: action.payload}\r\n        case 'new_test':\r\n            return {errorMessage: '', testId: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nconst new_test = (dispatch) => {\r\n    return async ({values, token, navigation}) => {\r\n        try {\r\n            //all of the calculation + adding result of calculation to test + actully saving test \r\n            //in DB will by done on server side in one function\r\n            //after doing all that, the server will return us the testID\r\n            \r\n            \r\n            const response = await trackerApi.post('/nitoxinewtest', {values, token})\r\n            if(!response.data.Error){\r\n                dispatch({type: 'new_test', payload: response.data._id})\r\n                navigation.navigate('TestShow')\r\n                console.log('positive context route')\r\n            } else {\r\n                console.log(response.data.Error)\r\n                dispatch({type: 'add_error', payload: response.data.Error})\r\n                console.log('negative context route')\r\n            }\r\n        } catch (err) {\r\n            dispatch({type: 'add_error', payload: 'Error registering test: This may be because the verification code is invalid or not all the questions were answered.'})\r\n            navigation.navigate('TestRecord')\r\n            // console.log('this is the error in the context: ',err)\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst update_test = (dispatch) => {\r\n    return async ({covidResult, testId}) => {\r\n        try {\r\n            const response = await trackerApi.post('/nitoxiupdatetest', {covidResult, testId})\r\n            dispatch({type: 'new_test', payload: response.data._id})\r\n            navigate('TestShow')\r\n        } catch (err) {\r\n            dispatch({type: 'add_error', payload: 'Error updating test'})\r\n        }\r\n    }\r\n}\r\n\r\nexport const {Provider, Context} = createDataContext(\r\n    testReducer,\r\n    {new_test, update_test},\r\n    {testId: null, errorMessage: ''}\r\n)","import React, {useState, useContext} from 'react'\r\nimport {View, Text, StyleSheet, TextInput, Button, TouchableOpacity, ScrollView, Modal, Dimensions} from 'react-native'\r\nimport {Formik} from 'formik'\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport { FontAwesome } from '@expo/vector-icons';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport RadioButton from \"./RadioButton\"\r\nimport Slider from '@react-native-community/slider'\r\nimport QRCodeModal from \"./QRCodeModal\"\r\nimport {Context as AuthContext} from '../context/AuthContext'\r\nimport {Context} from '../context/testContext'\r\nimport * as yup from 'yup'\r\nimport { Linking } from 'react-native';\r\n\r\nconst testSchema = yup.object({\r\n    qrcode: yup.string().required()\r\n})\r\nconst screenHeight = Dimensions.get(\"window\").height\r\n\r\n\r\nconst RealQuestions = ({navigation, authState}) => {\r\n    const {state, new_test} = useContext(Context)\r\n    // const {state} = useContext(AuthContext)\r\n    const [q6_1, setq6_1] = useState(false)\r\n    const [waste, setwaste] = useState(false)\r\n    const [newModalVisible, setNewModalVisible] = useState(false)\r\n    const [showError, setShowError] = useState(false) \r\n\r\n    return (\r\n        <ScrollView style={{height: screenHeight-100, paddingBottom: 30}} showsVerticalScrollIndicator={false}>\r\n            <MaterialCommunityIcons style={{textAlign: 'center', marginBottom: 20}} name=\"credit-card-multiple-outline\" size={200} color=\"white\" />\r\n            <Text style={styles.headingStyle}>Instructions</Text>\r\n            <Text style={styles.subTextStyle}>Open the attached alcohol pad packet, try to smell the resulting fragrance from the pad, and then answer the following questions.</Text>\r\n            <Formik\r\n                validationSchema={testSchema}\r\n                initialValues={{q1: 0, q2: false, q3: false, q4: 0,q5:0, q6: false, q6_1:false, q7: false, qrcode:'', verified: false, covidResult: false}}\r\n                onSubmit={async (values)=>{\r\n                    console.log(values)\r\n                    console.log(authState.token)\r\n                    try {\r\n                        await new_test({values, token: authState.token, navigation})\r\n                        await console.log(state)\r\n                        if(!state.errorMessage){\r\n                            navigation.navigate('TestShow', {param: state.testId})\r\n                        } else {\r\n                            console.log('error')\r\n                            setShowError(true)\r\n                        }\r\n\r\n                    } catch (err){\r\n                        console.log('error from onSubmit function: ', err)\r\n                    }\r\n                }}\r\n            >\r\n                {(formikProps)=>(\r\n                    <View>\r\n                        <View style={styles.questionView}>   \r\n                            <Text style={styles.questionLabelStyle}>Question 1</Text>\r\n                            <Text style={styles.questionStyle}>How strong do you think the smell is?</Text>\r\n                            <Slider\r\n                                style={{marginTop: 20}}\r\n                                minimumValue={0}\r\n                                maximumValue={100}\r\n                                minimumTrackTintColor=\"#743ED2\"\r\n                                maximumTrackTintColor=\"#000000\"\r\n                                onSlidingComplete={value=>formikProps.setFieldValue('q1', value)}\r\n                                step={1}\r\n                            />\r\n                            <View style={{flexDirection:'row', justifyContent: 'space-between'}}>\r\n                                <Text style={styles.questionLabelStyle}>Very Weak</Text>\r\n                                <Text style={styles.questionLabelStyle}>Moderate</Text>\r\n                                <Text style={styles.questionLabelStyle}>Very Strong</Text>\r\n                            </View>\r\n                        </View>\r\n\r\n                        <View style={styles.questionView}>   \r\n                            <Text style={styles.questionLabelStyle}>Question 2</Text>\r\n                            <Text style={styles.questionStyle}>Have you had fever in the past 72 hours?</Text>\r\n                            <RadioButton \r\n                                value={formikProps.values.q2} \r\n                                fieldName={'q2'} \r\n                                setValue={formikProps.setFieldValue}\r\n                                nextQ={waste}\r\n                                setNextQ={setwaste}\r\n                                />\r\n                        </View>\r\n                        <View style={styles.questionView}>   \r\n                            <Text style={styles.questionLabelStyle}>Question 3</Text>\r\n                            <Text style={styles.questionStyle}>Do you have a cough?</Text>\r\n                            <RadioButton \r\n                                value={formikProps.values.q3} \r\n                                fieldName={'q3'} \r\n                                setValue={formikProps.setFieldValue}\r\n                                nextQ={waste}\r\n                                setNextQ={setwaste}\r\n                                />\r\n                        </View>\r\n\r\n                        <View style={styles.questionView}>   \r\n                            <Text style={styles.questionLabelStyle}>Question 4</Text>\r\n                            <Text style={styles.questionStyle}>Do you have any difficulty breathing?</Text>\r\n                            <RadioButton \r\n                                value={formikProps.values.q4} \r\n                                fieldName={'q3'} \r\n                                setValue={formikProps.setFieldValue}\r\n                                nextQ={waste}\r\n                                setNextQ={setwaste}\r\n                                />\r\n                        </View>\r\n                        \r\n                        <View style={styles.questionView}>   \r\n                            <Text style={styles.questionLabelStyle}>Question 5</Text>\r\n                            <Text style={styles.questionStyle}>What proportion of people in your household are currently sick or have recently been sick?</Text>\r\n                            <Slider\r\n                                style={{marginTop: 20}}\r\n                                minimumValue={0}\r\n                                maximumValue={100}\r\n                                minimumTrackTintColor=\"#743ED2\"\r\n                                maximumTrackTintColor=\"#000000\"\r\n                                onSlidingComplete={value=>formikProps.setFieldValue('q5', value)}\r\n                                step={1}\r\n                            />\r\n                            <View style={{flexDirection:'row', justifyContent: 'space-between'}}>\r\n                                <Text style={styles.questionLabelStyle}>None of them</Text>\r\n                                <Text style={styles.questionLabelStyle}>All of them</Text>\r\n                            </View>\r\n                        </View>\r\n                        \r\n                        \r\n                        \r\n\r\n\r\n                        <View style={styles.questionView}>   \r\n                            <Text style={styles.questionLabelStyle}>Question 6</Text>\r\n                            <Text style={styles.questionStyle}>Did you recently attend a large outdoor event?</Text>\r\n                            <RadioButton \r\n                                value={formikProps.values.q1} \r\n                                fieldName={'q6'} \r\n                                setValue={formikProps.setFieldValue}\r\n                                nextQ={q6_1}\r\n                                setNextQ={setq6_1}\r\n                                />\r\n                        </View>\r\n\r\n                        {q6_1 ?\r\n                        \r\n                        <View style={styles.questionView}>   \r\n                            <Text style={styles.questionLabelStyle}>Question 6a</Text>\r\n                            <Text style={styles.questionStyle}>Did you wear a face mask while attending said event?</Text>\r\n                            <RadioButton \r\n                                value={formikProps.values.q1} \r\n                                fieldName={'q6_1'} \r\n                                setValue={formikProps.setFieldValue}\r\n                                nextQ={waste}\r\n                                setNextQ={setwaste}\r\n                                />\r\n                        </View>\r\n\r\n                        : null}\r\n\r\n                        <View style={styles.questionView}>   \r\n                            <Text style={styles.questionLabelStyle}>Question 7</Text>\r\n                            <Text style={styles.questionStyle}>Do you have a smoking habit?</Text>\r\n                            <RadioButton \r\n                                value={formikProps.values.q1} \r\n                                fieldName={'q7'} \r\n                                setValue={formikProps.setFieldValue}\r\n                                nextQ={waste}\r\n                                setNextQ={setwaste}\r\n                                />\r\n                        </View>\r\n                        \r\n                        <Text style={styles.questionLabelStyle}>Verification</Text>\r\n                        <Text style={styles.questionStyle}>Clicking the scan button below will take you to a QR Code scanning web app, where you will be able to get the verification ID, which you should paste into the field below to verify your test.</Text>\r\n                        <View style={{flexDirection: 'row', marginTop: 30}}>\r\n                            \r\n                            <TextInput\r\n                                // editable={false}\r\n                                style={styles.idStyle}\r\n                                onChangeText={(text)=>{formikProps.setFieldValue('qrcode', text)}}\r\n                                placeholder={'Press the Scan Button'}\r\n                                // value={formikProps.values.qrcode}\r\n                            />\r\n                                \r\n\r\n                            <TouchableOpacity style={{flex:2, alignItems:'stretch'}} onPress={()=> {window.open('https://qrcodescan.in/', \"_blank\")}}>\r\n                                <View style={styles.scanButtonStyle} >\r\n                                    <Text style={{paddingHorizontal:15, paddingVertical: 10, fontSize: 18, fontWeight: 'bold', color: 'white'}}><FontAwesome name=\"qrcode\" size={40} color=\"white\" /></Text>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                                \r\n                        </View>\r\n                        {formikProps.errors.qrcode?<View style={{padding: 15, borderRadius: 10, backgroundColor: 'red', marginVertical: 10}}><Text style={{color: 'white'}}>{formikProps.errors.qrcode}</Text></View>: null}\r\n\r\n\r\n                        {/* <Modal\r\n                            animationType=\"slide\"\r\n                            transparent={false}\r\n                            visible={newModalVisible}\r\n                            onRequestClose={() => {\r\n                                setNewModalVisible(!newModalVisible);\r\n                            }}\r\n                            presentationStyle={'pageSheet'}\r\n                            >\r\n                            \r\n                                <QRCodeModal \r\n                                    value={formikProps.values.qrcode} \r\n                                    setValue={formikProps.setFieldValue} \r\n                                    newModalVisible={newModalVisible} \r\n                                    setNewModalVisible={setNewModalVisible} \r\n                                />\r\n                            \r\n                        </Modal>    */}\r\n                        \r\n                        {showError ? <View style={styles.errmsg}><Text style={{color: 'white'}}>{state.errorMessage}</Text></View>: null}\r\n                        <TouchableOpacity onPress={formikProps.handleSubmit}>\r\n                            <View style={{marginVertical: 50, backgroundColor: '#6933C3', padding: 16, borderRadius: 10}}>\r\n                                <Text style={{fontWeight: 'bold', fontSize: 20, color: 'white', textAlign: 'center'}}><Ionicons name=\"checkmark-done\" size={24} color=\"white\" />SUBMIT</Text>\r\n                            </View>\r\n                        </TouchableOpacity >\r\n                    </View>\r\n                )}\r\n            </Formik>\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    headingStyle: {\r\n        fontWeight: 'bold',\r\n        fontSize: 25,\r\n        color: 'white'\r\n    }, \r\n    subTextStyle: {\r\n        color: 'white',\r\n        opacity: 0.5,\r\n        fontSize: 16,\r\n        marginBottom: 40\r\n    },\r\n    questionLabelStyle: {\r\n        color: 'white',\r\n        opacity: 0.3, \r\n        fontSize: 16\r\n    },\r\n    questionStyle: {\r\n        fontSize: 20,\r\n        color: 'white'\r\n    },\r\n    questionView: {\r\n        marginVertical: 20\r\n    },\r\n    idStyle: {\r\n        backgroundColor:'black', \r\n        borderTopLeftRadius:15, \r\n        borderBottomLeftRadius: 15, \r\n        color:'white',\r\n        fontSize: 16, \r\n        paddingHorizontal: 15, \r\n        paddingVertical: 10,\r\n        flex: 8,\r\n        opacity: 0.5\r\n    },\r\n    scanButtonStyle: {\r\n        backgroundColor: '#743ED2', \r\n        alignItems: 'center', \r\n        borderTopRightRadius: 15, \r\n        borderBottomRightRadius: 15\r\n    },\r\n    errmsg: {\r\n        backgroundColor: 'red',\r\n        padding: 20,\r\n        borderRadius: 15,\r\n        marginVertical: 20\r\n    }\r\n})\r\n\r\nexport default RealQuestions","import React, {useState, useEffect, useContext} from 'react'\r\nimport {View, Text, StyleSheet, TouchableOpacity, Dimensions, Button} from 'react-native'\r\nimport RealQuestions from \"./RealQuestions\"\r\nimport {Context as AuthContext} from '../context/AuthContext'\r\n\r\n\r\nconst screenWidth = Dimensions.get(\"window\").width\r\nconst screenHeight = Dimensions.get(\"window\").height\r\n\r\n\r\nconst ModalQuestions = ({modalVisible, setModalVisible, navigation}) => {\r\n    const {state} = useContext(AuthContext)\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <View style={styles.viewStyle}>\r\n            <View style={{flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: screenHeight*0.02}}>\r\n                <Text style={styles.headingStyle}>New Test</Text>\r\n                <TouchableOpacity style={{borderRadius: 10}} onPress={()=> {setModalVisible(!modalVisible)}}>\r\n                    <View style={{borderRadius: 8, backgroundColor: 'black'}}>\r\n                        <Text style={styles.cancelStyle}>Cancel</Text>\r\n                    </View>\r\n\r\n\r\n                </TouchableOpacity>\r\n\r\n            </View>\r\n                   \r\n            <RealQuestions authState={state} navigation={navigation} modalVisible={modalVisible} setModalVisible={setModalVisible}/>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    viewStyle: {\r\n        paddingHorizontal: screenWidth * 0.07,\r\n        paddingTop: screenHeight * 0.04,\r\n        backgroundColor: \"#1F1F1F\",\r\n        flex: 1\r\n    },\r\n    headingStyle: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        fontSize: 30\r\n    }, \r\n    cancelStyle: {\r\n        color: '#8555D7',\r\n        fontSize: 17,\r\n        padding: screenWidth * 0.02\r\n    }\r\n})\r\n\r\nexport default ModalQuestions","import React, {useState} from 'react'\r\nimport {View, Text, StyleSheet, TouchableOpacity, Dimensions, Modal} from 'react-native'\r\nimport ModalQuestions from \"../components/ModalQuestions\"\r\nconst screenHeight = Dimensions.get(\"window\").height\r\n\r\n\r\nconst GetTested = ({navigation, authState}) => {\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n\r\n    return (\r\n        <View> \r\n            {/* <Modal\r\n                animationType=\"slide\"\r\n                transparent={false}\r\n                visible={modalVisible}\r\n                onRequestClose={() => {\r\n                    // Alert.alert(\"Modal has been closed.\");\r\n                    setModalVisible(!modalVisible);\r\n                }}\r\n                presentationStyle={'pageSheet'}\r\n                >\r\n                <ModalQuestions navigation={navigation} modalVisible={modalVisible} setModalVisible={setModalVisible}/>\r\n            </Modal> */}\r\n            <TouchableOpacity onPress={()=> {navigation.navigate('Questions', {state: authState})}}>\r\n                <View style={styles.viewStyle}>\r\n                    <Text style={styles.buttonStyle}>Get Tested</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    buttonStyle: {\r\n        padding: screenHeight * 0.02,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: 19,\r\n        color: 'white'\r\n    },\r\n    viewStyle: {\r\n        justifyContent: 'center',\r\n        backgroundColor: '#743ED2',\r\n        // flex: 1,\r\n        borderRadius: 15\r\n    }\r\n})\r\n\r\nexport default GetTested","import React, {useEffect} from 'react'\r\nimport {View, Text, StyleSheet, Dimensions, ScrollView, TouchableOpacity} from 'react-native'\r\nimport useGlobalApi from '../hooks/useGlobalApi'\r\n\r\n\r\nconst screenHeight = Dimensions.get(\"window\").height\r\nconst screenWidth = Dimensions.get(\"window\").width\r\n\r\nconst GlobalStats = ({style}) => {\r\n    const [data, findGlobal, globalData, findActualGlobal] = useGlobalApi()\r\n    useEffect(()=>{\r\n        findActualGlobal()\r\n    },[])\r\n    return (\r\n        <View style={style}>\r\n            <View  style={styles.viewStyle}>\r\n                <View>\r\n                    <View style={{flexDirection: 'row', justifyContent: 'space-between'}}>\r\n                        <Text style={styles.headingStyle}>Global Statistics</Text>\r\n                        <Text style={{color: 'white', opacity: 0.3, paddingRight: 15}}>(swipe)</Text>\r\n                    </View>\r\n                    <ScrollView horizontal showsHorizontalScrollIndicator={false} pagingEnabled contentContainerStyle={{flexDirection: 'row'}}>\r\n                        <View style={{width: screenWidth*0.975, paddingLeft: 15}}>\r\n                            {globalData? <Text style={styles.statStyle}>{globalData['Active Cases_text']}</Text>: <Text style={styles.statStyle}>Loading</Text>}\r\n                            <Text style={styles.captionStyle}>Active cases</Text>\r\n                        </View>\r\n                        <View style={{width: screenWidth*0.975, paddingLeft: 15}}>\r\n                            {globalData? <Text style={styles.statStyle}>{globalData['Total Cases_text']}</Text>: <Text style={styles.statStyle}>Loading</Text>}\r\n                            <Text style={styles.captionStyle}>Total cases recorded (all-time)</Text>\r\n                        </View>\r\n                        <View style={{width: screenWidth*0.975, paddingLeft: 15}}>\r\n                            {globalData? <Text style={styles.statStyle}>{globalData['Total Recovered_text']}</Text>: <Text style={styles.statStyle}>Loading</Text>}\r\n                            <Text style={styles.captionStyle}>Total recoveries recorded (all-time)</Text>\r\n                        </View>\r\n                        <View style={{width: screenWidth*0.975, paddingLeft: 15}}>\r\n                            {globalData? <Text style={styles.statStyle}>{globalData['New Cases_text']}</Text>: <Text style={styles.statStyle}>Loading</Text>}\r\n                            <Text style={styles.captionStyle}>New cases recorded recently</Text>\r\n                        </View>\r\n                        <View style={{width: screenWidth*0.975, paddingLeft: 15}}>\r\n                            {globalData? <Text style={styles.statStyle}>{globalData['New Deaths_text']}</Text>: <Text>Loading</Text>}\r\n                            <Text style={styles.captionStyle}>New deaths recorded recently</Text>\r\n                        </View>\r\n                    </ScrollView>\r\n                </View>\r\n                \r\n            </View>\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    viewStyle: {\r\n        paddingVertical: 15,\r\n        flex: 1\r\n    },\r\n    headingStyle: {\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        color: 'white',\r\n        paddingLeft: 15\r\n        // marginBottom: screenHeight * 0.007\r\n    },\r\n    statStyle: {\r\n        color: '#D89632',\r\n        fontWeight: 'bold',\r\n        fontSize: 50\r\n    },\r\n    captionStyle: {\r\n        color: 'white',\r\n        // width: screenWidth * 0.35\r\n    }\r\n})\r\n\r\nexport default GlobalStats","import React, {useState, useEffect, useContext} from 'react'\r\nimport {View, Text, StyleSheet, Dimensions, Modal, TouchableOpacity, ScrollView, RefreshControl} from 'react-native'\r\nimport RecentActivity from \"../components/RecentActivity\"\r\nimport NationalStats from \"../components/NationalStats\"\r\nimport GlobalStats from \"../components/GlobalStats\"\r\nimport IndividualStats from \"../components/IndividualStats\"\r\nimport Overview from \"../components/Overview\"\r\nimport GetTested from \"../components/GetTested\"\r\nimport useGetRecent from '../hooks/useGetRecent'\r\nimport {Context as AuthContext} from '../context/AuthContext'\r\n\r\nconst screenWidth = Dimensions.get(\"window\").width\r\nconst screenHeight = Dimensions.get(\"window\").height\r\n\r\n\r\nconst DashPage = ({navigation}) => {\r\n    const {state, signout} = useContext(AuthContext)\r\n\r\n    const [findRecent, recent, error] = useGetRecent()\r\n    useEffect(()=>{findRecent(state.token)},[])\r\n    const [doRefresh, setDoRefresh] = useState(false)\r\n\r\n\r\n    const wait = (timeout) => {\r\n        return new Promise(resolve => setTimeout(resolve, timeout));\r\n      }\r\n    const onRefresh = React.useCallback(() => {\r\n        setRefreshing(true);\r\n        setDoRefresh(true)\r\n        wait(1000).then(() => setRefreshing(false));\r\n      }, []);\r\n\r\n    const [refreshing, setRefreshing] = useState(false)\r\n    return (\r\n        <View style={styles.viewStyle}>\r\n            <ScrollView \r\n                refreshControl={\r\n                    <RefreshControl\r\n                        enabled={true}\r\n                        refreshing={refreshing}\r\n                        onRefresh={onRefresh}\r\n                    />\r\n                }\r\n                style={{paddingHorizontal: 5, height: screenHeight-150}}>\r\n                \r\n                <RecentActivity doRefresh={doRefresh} setDoRefresh={setDoRefresh} navigation={navigation}/>\r\n                \r\n                <Text style={{color: 'white', opacity: 0.5, margin: 10, marginBottom: 0, backgroundColor: '#424242', borderRadius: 15}}>All the following stats are fetched from the WorldBank API</Text>\r\n                <NationalStats style={styles.statsStripStyle}/>\r\n                    \r\n               \r\n                <GlobalStats style={styles.statsStripStyle}/>\r\n                    {/* <View style={styles.statsStyle}>\r\n                    </View> */}\r\n                    \r\n                \r\n                \r\n                <Overview doRefresh={doRefresh} setDoRefresh={setDoRefresh} navigation={navigation} style={styles.graphStyle}/>\r\n                \r\n\r\n            </ScrollView>\r\n            <View style={styles.getTestedStyle}>\r\n                <GetTested authState={state} navigation={navigation}/>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    viewStyle: {\r\n        // borderWidth: 3,\r\n        // borderColor: \"red\",\r\n        // paddingVertical: screenHeight * 0.015,\r\n        // paddingHorizontal: screenWidth * 0.022,\r\n        flex: 1,\r\n        // height: screenHeight- 80,\r\n        // backgroundColor: '#424242',\r\n        backgroundColor: '#424242',\r\n        justifyContent: 'space-around'\r\n    },\r\n    recentActivityStyle: {\r\n        \r\n        // flex: 3,\r\n    },\r\n    statsStripStyle: {\r\n        // height: 135,\r\n        // flex: 2,\r\n        alignItems: 'stretch',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        marginTop: 10,\r\n        backgroundColor: '#292929',\r\n        borderRadius: 15\r\n\r\n    },\r\n    graphStyle: {\r\n        // height: screenHeight * 0.20,\r\n        // flex: 2,\r\n        // alignItems: 'stretch',\r\n        // flexDirection: 'row',\r\n        // justifyContent: 'space-between',\r\n        backgroundColor: '#292929',\r\n        borderRadius: 15,\r\n        marginTop: 10,\r\n        padding: 15\r\n\r\n    },\r\n    statsStyle: {\r\n        // width: screenWidth * 0.464,\r\n        backgroundColor: '#292929',\r\n        borderRadius: 15,\r\n        \r\n    },\r\n    getTestedStyle: {\r\n        // flex: 1,\r\n        // bottom: 15,\r\n        // width: screenWidth,\r\n        // position: 'absolute',\r\n        margin: 3,\r\n        marginBottom: 80,\r\n        alignSelf: 'stretch'\r\n    }\r\n})\r\n\r\nexport default DashPage\r\n\r\n","import React, {useState} from 'react'\r\nimport {View, Text, StyleSheet, Dimensions, Modal, TouchableOpacity} from 'react-native'\r\nimport RecentActivity from \"../components/RecentActivity\"\r\nimport NationalStats from \"../components/NationalStats\"\r\nimport IndividualStats from \"../components/IndividualStats\"\r\nimport Overview from \"../components/Overview\"\r\nimport GetTested from \"../components/GetTested\"\r\nimport DashPage from '../components/DashPage'\r\n\r\nconst screenWidth = Dimensions.get(\"window\").width\r\nconst screenHeight = Dimensions.get(\"window\").height\r\n\r\nconst dashboard = ({navigation}) => {\r\n    return (\r\n        <View style={{height: screenHeight}}>\r\n            <DashPage navigation={navigation}/>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    viewStyle: {\r\n        // borderWidth: 3,\r\n        // borderColor: \"red\",\r\n        paddingVertical: screenHeight * 0.015,\r\n        paddingHorizontal: screenWidth * 0.022,\r\n        flex: 1,\r\n        backgroundColor: '#424242'\r\n    },\r\n    recentActivityStyle: {\r\n        backgroundColor: '#292929',\r\n        height: screenHeight * 0.34,\r\n        borderRadius: 15,\r\n        // flex: 3,\r\n        marginBottom: screenHeight* 0.0075\r\n    },\r\n    statsStripStyle: {\r\n        height: screenHeight * 0.20,\r\n        // flex: 2,\r\n        alignItems: 'stretch',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        marginVertical: screenHeight* 0.0075\r\n    },\r\n    graphStyle: {\r\n        height: screenHeight * 0.20,\r\n        // flex: 2,\r\n        alignItems: 'stretch',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        marginVertical: screenHeight* 0.0075,\r\n        backgroundColor: '#292929',\r\n        borderRadius: 15\r\n    },\r\n    statsStyle: {\r\n        width: screenWidth * 0.464,\r\n        backgroundColor: '#292929',\r\n        borderRadius: 15\r\n    },\r\n    getTestedStyle: {\r\n        // flex: 1,\r\n        marginVertical: screenHeight* 0.0075\r\n    }\r\n})\r\n\r\nexport default dashboard\r\n\r\n","import trackerApi from '../api/tracker'\r\nimport {useState, useEffect} from 'react'\r\n\r\nexport default () => {\r\n    const [oneTest, setOneTest] = useState({})\r\n    const [results, setResults] = useState([])\r\n    const [error, setError] = useState('')\r\n\r\n    const searchApi = async (token) => {\r\n        //this finds all test records for a given userID\r\n        try {\r\n            const response = await trackerApi.get(`/${token}`, {\r\n                params: {\r\n                    token: token\r\n                }\r\n            })\r\n            setResults(response.data)\r\n            // console.log(response.data)\r\n        } catch (err) {\r\n            setError('Something went wrong')\r\n        }\r\n    }\r\n\r\n    const findOneTest = async(testId) => {\r\n        try {\r\n            const response = await trackerApi.get(`/nitoxitests/${testId}`)\r\n            // console.log('this is the console log from the useRecord hook', response.data)\r\n            setOneTest(response.data)\r\n        } catch (err) {\r\n            console.log('this is the error within the useRecord hook', err)\r\n        }\r\n    }\r\n     //initial call so that page isnt blank\r\n\r\n\r\n    return [searchApi, findOneTest, oneTest, results, error]\r\n}\r\n","import React from 'react'\r\nimport {View, Text, StyleSheet, TouchableOpacity} from 'react-native'\r\n\r\nconst TestListItem = ({item, navigation}) => {\r\n    let percentStyle\r\n    if (item.percentage < 10) {\r\n        percentStyle = styles.percentStyleGreen\r\n    } else if (item.percentage < 50) {\r\n        percentStyle = styles.percentStyleYellow\r\n    } else {\r\n        percentStyle = styles.percentStyleRed\r\n    }\r\n\r\n    return (\r\n        <TouchableOpacity style={styles.containerStyle} onPress={()=>{navigation.navigate('TestShow',{param: item._id})}}>\r\n            <View style={{flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center'}}>\r\n                <View>\r\n                    <Text style={styles.dayStyle}>{item.testDay}</Text>\r\n                    <Text style={styles.dateStyle}>{item.testDate}</Text>\r\n                </View>\r\n                <Text style={percentStyle}>{item.percentage}%</Text>\r\n            </View>\r\n        </TouchableOpacity>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    containerStyle : {\r\n        backgroundColor: '#292929',\r\n        marginVertical: 6,\r\n        padding: 20,\r\n        borderRadius: 15\r\n    },\r\n    dayStyle: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        fontSize: 25\r\n    },\r\n    dateStyle: {\r\n        color: '#767578',\r\n        fontSize: 18\r\n\r\n    },\r\n    percentStyleRed: {\r\n        color: '#FB6F5A',\r\n        fontWeight: 'bold',\r\n        fontSize: 32\r\n    },\r\n    percentStyleYellow: {\r\n        color: '#DFA348',\r\n        fontWeight: 'bold',\r\n        fontSize: 32\r\n    },\r\n    percentStyleGreen: {\r\n        color: '#7FD068',\r\n        fontWeight: 'bold',\r\n        fontSize: 32\r\n    }\r\n})\r\n\r\n\r\nexport default TestListItem","import React, {useContext, useEffect, useState} from 'react'\r\nimport useRecord from \"../hooks/useRecord\"\r\nimport {Context as AuthContext} from '../context/AuthContext'\r\nimport TestListItem from '../components/TestListItem'\r\n\r\nimport {View, Text, StyleSheet, FlatList, RefreshControl, Dimensions} from 'react-native'\r\nimport { TouchableOpacity } from 'react-native'\r\n\r\nconst screenHeight = Dimensions.get('window').height\r\n\r\n\r\nconst TestRecord = ({navigation}) => {\r\n    const [searchApi, findOneTest, oneTest, results, error] = useRecord()\r\n    const {state} = useContext(AuthContext)\r\n    useEffect(()=>{\r\n        searchApi(state.token)\r\n       \r\n    }, [])\r\n\r\n    const [doRefresh, setDoRefresh] = useState(false)\r\n    const [refreshing, setRefreshing] = useState(false)\r\n\r\n\r\n    const wait = (timeout) => {\r\n        return new Promise(resolve => setTimeout(resolve, timeout));\r\n      }\r\n    const onRefresh = React.useCallback(() => {\r\n        setRefreshing(true);\r\n        searchApi(state.token)\r\n        wait(1000).then(() => setRefreshing(false));\r\n      }, []);\r\n    \r\n\r\n    return (    \r\n        <View style={{height: screenHeight, backgroundColor: '#424242', padding: 20, paddingBottom: 0}}>\r\n            <View style={{flexDirection: 'row', justifyContent:'space-between', alignItems: 'center'}}>\r\n                <Text style={styles.headingStyle}>All Tests</Text>\r\n                {/* <TouchableOpacity onPress={()=>{searchApi(state.token)}}>\r\n                    <View style={{padding: 10 ,backgroundColor: '#1D1D1D', borderRadius: 10}}>\r\n                        <Text style={{color: 'white'}}>Refresh</Text>\r\n                    </View>\r\n                </TouchableOpacity> */}\r\n            </View>\r\n            {results[0] ? <FlatList\r\n                    showsVerticalScrollIndicator={false}\r\n                    refreshControl={\r\n                        <RefreshControl\r\n                            enabled={true}\r\n                            refreshing={refreshing}\r\n                            onRefresh={onRefresh}\r\n                        />\r\n                    }\r\n                    data={results}\r\n                    style={{height: screenHeight}}\r\n                    keyExtractor={(item)=>{Math.random().toString()}}\r\n                    renderItem={({item})=>{\r\n                        return (\r\n                            <TestListItem item={item} navigation={navigation}/>\r\n                                    ) \r\n                                }\r\n                            } \r\n                            />: <Text style={{color: 'white', fontSize: 18, textAlign: 'center'}}>Loading...</Text>}\r\n            <View style={{flex: 1}}></View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    headingStyle: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        fontSize: 32,\r\n        marginBottom: 10\r\n    }\r\n})\r\n\r\nexport default TestRecord","import React from 'react'\r\nimport {View, Text, StyleSheet} from 'react-native'\r\n\r\nconst RecentDetails = () => {\r\n    return (\r\n        <View>\r\n            <Text>This is the recent details page</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n})\r\n\r\nexport default RecentDetails","import React, {useState} from 'react'\r\nimport { TouchableOpacity } from 'react-native'\r\nimport {View, Text, StyleSheet} from 'react-native'\r\n\r\nconst GenderPicker = ({value, setValue}) => {\r\n    const [maleButton, setMaleButton] = useState(styles.buttonStyle)\r\n    const [femaleButton, setFemaleButton] = useState(styles.buttonStyle)\r\n    const [otherButton, setOtherButton] = useState(styles.buttonStyle)\r\n    return (\r\n        <View style={styles.genderInput}>\r\n            <View style={{flexDirection: 'row', justifyContent: 'space-around', alignItems: 'stretch'}}>\r\n                <View style={maleButton}>\r\n                    <TouchableOpacity style={{justifyContent: 'center'}} onPress={()=>{\r\n                        setFemaleButton(styles.buttonStyle)\r\n                        setOtherButton(styles.buttonStyle)\r\n                        setMaleButton(styles.selectedButtonStyle)\r\n                        setValue('gender', 'Male')\r\n                    }}>\r\n                            <Text style={styles.buttonLabelStyle}>Male</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={femaleButton}>\r\n                    <TouchableOpacity style={{justifyContent: 'center'}} onPress={()=>{\r\n                        setFemaleButton(styles.selectedButtonStyle)\r\n                        setOtherButton(styles.buttonStyle)\r\n                        setMaleButton(styles.buttonStyle)\r\n                        setValue('gender', 'Female')\r\n                    }}>\r\n                        <Text style={styles.buttonLabelStyle}>Female</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={otherButton}>\r\n                    <TouchableOpacity style={{justifyContent: 'center'}} onPress={()=>{\r\n                        setFemaleButton(styles.buttonStyle)\r\n                        setOtherButton(styles.selectedButtonStyle)\r\n                        setMaleButton(styles.buttonStyle)\r\n                        setValue('gender','Other')\r\n                    }}>\r\n                        <Text style={styles.buttonLabelStyle}>Other</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    genderInput: {\r\n        backgroundColor: '#3B2068',\r\n        height: 50,\r\n        borderRadius: 10,\r\n        color: 'white',\r\n        fontSize: 18,\r\n        marginVertical:10,\r\n        flex: 7,\r\n        marginHorizontal: 5,\r\n        justifyContent: 'center'\r\n    },\r\n    buttonLabelStyle: {\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        // backgroundColor: 'white',\r\n        height: 38,\r\n        paddingTop: 10\r\n    },\r\n    buttonStyle: {\r\n        backgroundColor: '#2B1058',\r\n        height: 38,\r\n        margin: 6,\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        borderRadius: 10\r\n    },\r\n    selectedButtonStyle: {\r\n        backgroundColor: '#222222',\r\n        height: 38,\r\n        margin: 6,\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        borderRadius: 10\r\n    }\r\n})\r\n\r\nexport default GenderPicker","import React, {useState, useContext, Component} from 'react'\r\nimport {View, Text, StyleSheet, TextInput, TouchableOpacity, ScrollView, Dimensions} from 'react-native'\r\nimport {Button} from 'react-native-elements'\r\nimport {Context} from '../context/AuthContext'\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport {Formik} from 'formik'\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport GenderPicker from '../components/GenderPicker'\r\nimport * as yup from 'yup'\r\n\r\nconst screenHeight = Dimensions.get(\"window\").height\r\n\r\nconst signupSchema = yup.object({\r\n    email: yup.string().email(),\r\n    password: yup.string().required().min(6),\r\n    firstName: yup.string().required().min(4),\r\n    lastName: yup.string().required().min(4)\r\n})\r\n\r\n\r\nconst SignupScreen = ({navigation})=> {\r\n    const {state, signup} = useContext(Context)\r\n    const [buttonLoading, setButtonLoading] = useState(false)\r\n    const [moveUp, setMoveUp] = useState(styles.inputGroup)\r\n\r\n\r\n    return (\r\n        <View style={{flex:1, backgroundColor: '#552E9A'}}>\r\n            <LinearGradient\r\n                // Background Linear Gradient\r\n                colors={['#743ED2', '#3A1F69']}\r\n                style={{flex: 1}}\r\n\r\n            >\r\n                <ScrollView showsVerticalScrollIndicator={false} style={{height: screenHeight-80, paddingBottom: 100}}>\r\n\r\n                \r\n                <View style={{marginTop: 0}}>\r\n                    <View style={{flexDirection: 'row', justifyContent:'space-between', paddingHorizontal: 30}}>\r\n\r\n                        <View>\r\n                            <Text style={styles.emblem}>NITOXI</Text>\r\n                            <Text style={styles.subHeading}>REGISTER</Text>\r\n                        </View>\r\n                        <MaterialCommunityIcons name=\"microscope\" style={{marginTop: 30}} size={100} color=\"white\" />\r\n                    </View>\r\n                    <View style={moveUp}>\r\n                        {state.errorMessage ? <View style={{borderRadius: 10, backgroundColor: 'red'}}><Text style={styles.errormsg}>{state.errorMessage}</Text></View>: null}\r\n                        <Formik\r\n                            validationSchema={signupSchema}\r\n                            initialValues={{email: '', password: '', firstName: '', lastName: '', gender: '', age: ''}}\r\n                            onSubmit={(values)=>{\r\n                                console.log(values)\r\n                                console.log(typeof values.age)\r\n                                setButtonLoading(true)\r\n                                signup({values, setButtonLoading})\r\n                            }}\r\n                        >\r\n                            {(formikProps)=>(\r\n                                <View>\r\n                                    {/* <View style={{backgroundColor: 'black',flexDirection: 'row'}}> */}\r\n                                        <TextInput\r\n                                            onFocus={()=>{setMoveUp(styles.inputGroupFocused)}}\r\n                                            onEndEditing={()=>{setMoveUp(styles.inputGroup)}}\r\n                                            placeholder={'First Name'}\r\n                                            placeholderTextColor='#736D6D'\r\n                                            style={styles.input}\r\n                                            value={formikProps.values.firstName}\r\n                                            onChangeText={formikProps.handleChange('firstName')} \r\n                                            label=\"First Name\" \r\n                                            autoCorrect={false}\r\n                                            />\r\n                                        <TextInput\r\n                                            onFocus={()=>{setMoveUp(styles.inputGroupFocused)}}\r\n                                            onEndEditing={()=>{setMoveUp(styles.inputGroup)}}\r\n                                            placeholder={'Last Name'}\r\n                                            placeholderTextColor='#736D6D'\r\n                                            style={styles.input}\r\n                                            value={formikProps.values.lastName}\r\n                                            onChangeText={formikProps.handleChange('lastName')} \r\n                                            label=\"Last Name\" \r\n                                            autoCorrect={false}\r\n                                            />\r\n                                    {/* </View> */}\r\n                                    <View style={{flexDirection: 'row', marginLeft: 5}}>\r\n                                        {formikProps.errors.firstName ? <Text style={{color: 'red', fontWeight: 'bold', flex: 1}}>{formikProps.errors.firstName}</Text>: null}\r\n                                        {formikProps.errors.lastName ? <Text style={{color: 'red', fontWeight: 'bold', flex: 1}}>{formikProps.errors.lastName}</Text>: null}\r\n                                    </View>\r\n\r\n                                    {/* <View style={{flexDirection: 'row', justifyContent: 'space-between'}}> */}\r\n                                    \r\n                                    <GenderPicker\r\n                                        value={formikProps.values.gender}\r\n                                        setValue={formikProps.setFieldValue}\r\n                                    />\r\n                                    <TextInput\r\n                                        onFocus={()=>{setMoveUp(styles.inputGroupFocused)}}\r\n                                        onEndEditing={()=>{setMoveUp(styles.inputGroup)}}\r\n                                        placeholder={'Age'}\r\n                                        placeholderTextColor='#736D6D'\r\n                                        style={styles.input}\r\n                                        keyboardType={'number-pad'}\r\n                                        value={formikProps.values.age}\r\n                                        onChangeText={formikProps.handleChange('age')} \r\n                                        label=\"Age\" \r\n                                        autoCorrect={false}\r\n                                    />\r\n                                    {/* </View> */}\r\n                                    \r\n                                    <TextInput\r\n                                        autoCapitalize=\"none\"\r\n                                        keyboardType={'email-address'}\r\n                                        onFocus={()=>{setMoveUp(styles.inputGroupFocused)}}\r\n                                        onEndEditing={()=>{setMoveUp(styles.inputGroup)}}\r\n                                        placeholder={'Email'}\r\n                                        placeholderTextColor='#736D6D'\r\n                                        style={styles.input}\r\n                                        value={formikProps.values.email}\r\n                                        onChangeText={formikProps.handleChange('email')} \r\n                                        label=\"Email\" \r\n                                        autoCorrect={false}\r\n\r\n                                    />\r\n                                    {formikProps.errors.email ? <Text style={{color: 'red', fontWeight: 'bold'}}>{formikProps.errors.email}</Text>: null}\r\n                                    <TextInput\r\n                                        autoCapitalize=\"none\"\r\n                                        secureTextEntry\r\n                                        onFocus={()=>{setMoveUp(styles.inputGroupFocused)}}\r\n                                        onEndEditing={()=>{setMoveUp(styles.inputGroup)}}\r\n                                        placeholder={'Password'}\r\n                                        placeholderTextColor='#736D6D'\r\n                                        style={styles.input}\r\n                                        value={formikProps.values.password}\r\n                                        onChangeText={formikProps.handleChange('password')} \r\n                                        label=\"Password\" \r\n                                        autoCorrect={false}\r\n                                    />\r\n                                    {formikProps.errors.password ? <Text style={{color: 'red', fontWeight: 'bold'}}>{formikProps.errors.password}</Text>: null}\r\n\r\n                                    <Text style={{color: 'white', fontSize: 12, marginHorizontal: 10, opacity: 0.5}}>By clicking the 'Sign Up' button, you are consenting for the provided information to be used solely to set up a Nitoxi user account.</Text>\r\n                                    <Button containerStyle={{marginTop: 20}} titleStyle={{fontSize: 22}} buttonStyle={styles.submit} loading={buttonLoading} title=\"SIGN UP\" onPress={formikProps.handleSubmit} />\r\n                                </View>\r\n                            )}\r\n                        </Formik>\r\n                    </View>\r\n                    <TouchableOpacity onPress={()=> {navigation.navigate('Signin')}}>\r\n                        <Text style={{color: '#ACAAAA', fontSize: 16, textDecorationLine:'underline', margin: 15, textAlign: 'center'}}>Already have an account? Sign in instead.</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                </ScrollView>\r\n            </LinearGradient>\r\n        </View>\r\n    )\r\n}\r\n\r\nSignupScreen.navigationOptions = () => {\r\n    return {\r\n      headerShown: false,\r\n    };\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    emblem: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        fontSize: 50,\r\n        letterSpacing: 8,\r\n        marginTop: 30\r\n        // textAlign: 'center'\r\n    },\r\n    subHeading: {\r\n        color: 'white',\r\n        fontSize: 40,\r\n        bottom: 10\r\n        // textAlign: 'center'\r\n    },\r\n    input: {\r\n        backgroundColor: '#3B2068',\r\n        height: 50,\r\n        borderRadius: 10,\r\n        color: 'white',\r\n        paddingHorizontal: 10,\r\n        fontSize: 18,\r\n        marginVertical:10,\r\n        // flex: 1,\r\n        // marginHorizontal: 1\r\n    },\r\n    inputGroup: {\r\n        paddingHorizontal: 25,\r\n        marginVertical: 20,\r\n        marginTop: 100\r\n    },\r\n    inputGroupFocused: {\r\n        paddingHorizontal: 25,\r\n        marginVertical: 20,\r\n        marginTop: 20\r\n    },\r\n    submit: {\r\n        backgroundColor: '#743ED2',\r\n        paddingHorizontal: 20,\r\n        paddingVertical: 15,\r\n        borderRadius: 10\r\n    },\r\n    errormsg : {\r\n        padding: 20,\r\n        // backgroundColor: 'red',\r\n        color: 'white',\r\n    }\r\n})\r\n\r\nexport default SignupScreen\r\n","import React, {useState, useContext, useEffect} from 'react'\r\nimport {View, StyleSheet, TouchableOpacity, TextInput} from 'react-native'\r\nimport {Text, Input, Button} from 'react-native-elements'\r\nimport {Context} from '../context/AuthContext'\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\n\r\nconst SigninScreen = ({navigation})=> {\r\n    const {state, signin, tryLocalSignin} = useContext(Context)\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [buttonLoading, setButtonLoading] = useState(false)\r\n    const [moveUp, setMoveUp] = useState(false)\r\n\r\n    useEffect(() => {\r\n        tryLocalSignin()\r\n    }, [])\r\n\r\n    return (\r\n        <View style={{flex:1, backgroundColor: '#552E9A'}}>\r\n            <LinearGradient\r\n                // Background Linear Gradient\r\n                colors={['#743ED2', '#3A1F69']}\r\n                style={{flex: 1}}\r\n\r\n            >\r\n                <View style={{marginTop: 70}}>\r\n                    {moveUp ? null: <MaterialCommunityIcons name=\"microscope\" style={styles.iconUnfocused} size={130} color=\"white\" /> }\r\n                    <Text style={styles.emblem}>NITOXI</Text>\r\n                    <Text style={styles.subHeading}>LOGIN</Text>\r\n                    <View style={styles.inputGroup}>\r\n                        {state.errorMessage ? <View style={{borderRadius: 10, backgroundColor: 'red'}}><Text style={styles.errormsg}>{state.errorMessage}</Text></View>: null}\r\n                        <TextInput\r\n                            onFocus={()=>{setMoveUp(true)}}\r\n                            onEndEditing={()=>{setMoveUp(false)}}\r\n                            placeholder={'email'}\r\n                            placeholderTextColor='#736D6D'\r\n                            style={styles.input}\r\n                            onChangeText={setEmail}\r\n                            label=\"Email\" \r\n                            keyboardType=\"email-address\"\r\n                            autoCapitalize=\"none\"\r\n                            autoCorrect={false}\r\n                            />\r\n                        <TextInput\r\n                            onFocus={()=>{setMoveUp(true)}}\r\n                            onEndEditing={()=>{setMoveUp(false)}}\r\n                            placeholder={'password'}\r\n                            placeholderTextColor='#736D6D'\r\n                            style={styles.input}\r\n                            onChangeText={setPassword} \r\n                            label=\"Password\" \r\n                            textContentType=\"password\"\r\n                            autoCapitalize=\"none\"\r\n                            autoCorrect={false}\r\n                            secureTextEntry\r\n                            />\r\n                        <Button containerStyle={{marginTop: 20}} titleStyle={{fontSize: 22}} buttonStyle={styles.submit} loading={buttonLoading} title=\"SIGN IN\" onPress={()=>{\r\n                            signin({email, password, buttonLoading, setButtonLoading})\r\n                            setButtonLoading(true)\r\n                        }} />\r\n                    </View>\r\n                    <TouchableOpacity onPress={()=> {navigation.navigate('Signup')}}>\r\n                        <Text style={{color: '#ACAAAA', fontSize: 16, textDecorationLine:'underline', margin: 15, textAlign: 'center'}}>Don't have an account? Sign up instead.</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </LinearGradient>\r\n        </View>\r\n    )\r\n}\r\n\r\nSigninScreen.navigationOptions = () => {\r\n    return {\r\n      headerShown: false,\r\n    };\r\n  }\r\n\r\nconst styles = StyleSheet.create({\r\n    emblem: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        fontSize: 50,\r\n        letterSpacing: 8,\r\n        textAlign: 'center'\r\n    },\r\n    subHeading: {\r\n        color: 'white',\r\n        fontSize: 40,\r\n        textAlign: 'center'\r\n    },\r\n    input: {\r\n        backgroundColor: '#3B2068',\r\n        height: 50,\r\n        borderRadius: 10,\r\n        color: 'white',\r\n        paddingHorizontal: 20,\r\n        fontSize: 18,\r\n        marginVertical:10\r\n    },\r\n    inputGroup: {\r\n        paddingHorizontal: 30,\r\n        marginVertical: 20\r\n    },\r\n    submit: {\r\n        backgroundColor: '#743ED2',\r\n        paddingHorizontal: 20,\r\n        paddingVertical: 15,\r\n        borderRadius: 10\r\n    },\r\n    errormsg : {\r\n        padding: 20,\r\n        // backgroundColor: 'red',\r\n        color: 'white',\r\n    },\r\n    iconUnfocused: {\r\n        textAlign: 'center', \r\n        marginBottom: 20\r\n    }\r\n})\r\n\r\nexport default SigninScreen\r\n","import React from 'react'\r\nimport {View, Text, StyleSheet, Image} from 'react-native'\r\n\r\nlet globalAlign\r\n\r\nconst TeamCard = ({image, name, title, align}) => {\r\n    let rowDir\r\n    let flexAlign\r\n    if (true){\r\n        rowDir = 'row'\r\n        flexAlign = 'flex-start'\r\n        globalAlign = 'left'\r\n    } else {\r\n        rowDir = 'row-reverse'\r\n        flexAlign = 'flex-end'\r\n        globalAlign = 'right'\r\n    }\r\n    return (\r\n        <View>\r\n            \r\n                <View style={{flexDirection: rowDir, marginBottom: 55}}>\r\n                    <Image style={{width: 135, height: 170, borderRadius: 10}} source={{uri:image}}/>\r\n                    <View style={{justifyContent: 'space-between', alignItems: flexAlign}}>\r\n                        <View>\r\n                            <Text style={styles.headingStyle}>{name}</Text>\r\n                        </View>\r\n                        <View>\r\n                            <Text style={{color: 'white', fontWeight: '200',marginHorizontal: 15 , fontSize: 20 ,marginVertical: 0, textAlign: 'left', width: 150}}>{title}</Text>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    // headingStyle: {\r\n    //     color: 'white',\r\n    //     fontWeight: 'bold',\r\n    //     fontSize: 32,\r\n    //     marginVertical: 20\r\n    // },\r\n    headingStyle: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        fontSize: 32,\r\n        marginVertical: 20,\r\n        textAlign: globalAlign,\r\n        marginVertical: 0, \r\n        marginHorizontal: 15, \r\n        width: 180\r\n    },\r\n    paraStyle: {\r\n        color: '#CCCCCC', \r\n        fontSize: 16, \r\n        marginBottom: 20\r\n    }\r\n\r\n})\r\n\r\nexport default TeamCard","import React from 'react'\r\nimport {View, StyleSheet, Text} from 'react-native'\r\n\r\nconst Responses = ({item}) => {\r\n    return (\r\n        <View>\r\n            <Text style={styles.headingStyle}>Your Responses</Text>\r\n            <Text style={{color: '#A6A6A6', fontSize: 14}}>Note: All numeric responses are on a scale of 1 to 10</Text>\r\n            <View style={{flexDirection: 'row', justifyContent: 'space-between', marginTop: 10, paddingVertical: 10}}>\r\n                <Text style={styles.subtextStyle}>How strong do you think the smell is?</Text>\r\n                <Text style={styles.answerStyle}>{item.q1/10}</Text>\r\n            </View>\r\n            <View style={{flexDirection: 'row', justifyContent: 'space-between', marginTop: 10, paddingVertical: 10}}>\r\n                <Text style={styles.subtextStyle}>Have you had fever in the past 72 hours?</Text>\r\n                {item.q2 ? <Text style={styles.answerStyle}>Yes</Text>: <Text style={styles.answerStyle}>No</Text>}\r\n            </View>\r\n            <View style={{flexDirection: 'row', justifyContent: 'space-between', marginTop: 10, paddingVertical: 10}}>\r\n                <Text style={styles.subtextStyle}>Do you have a cough?</Text>\r\n                {item.q3 ? <Text style={styles.answerStyle}>Yes</Text>: <Text style={styles.answerStyle}>No</Text>}\r\n            </View>\r\n            <View style={{flexDirection: 'row', justifyContent: 'space-between', marginTop: 10, paddingVertical: 10}}>\r\n                <Text style={styles.subtextStyle}>Do you have any difficulty breathing?</Text>\r\n                {item.q4 ? <Text style={styles.answerStyle}>Yes</Text>: <Text style={styles.answerStyle}>No</Text>}\r\n            </View>\r\n            <View style={{flexDirection: 'row', justifyContent: 'space-between', marginTop: 10, paddingVertical: 10}}>\r\n                <Text style={styles.subtextStyle}>What proportion of people in your household are currently sick or recently have been sick?</Text>\r\n                <Text style={styles.answerStyle}>{item.q5/10}</Text>\r\n            </View>\r\n            <View style={{flexDirection: 'row', justifyContent: 'space-between', marginTop: 10, paddingVertical: 10}}>\r\n                <Text style={styles.subtextStyle}>Did you recently attend a large outdoor event?</Text>\r\n                {item.q6 ? <Text style={styles.answerStyle}>Yes</Text>: <Text style={styles.answerStyle}>No</Text>}\r\n            </View>\r\n            {item.q6 ?\r\n                <View style={{flexDirection: 'row', justifyContent: 'space-between', marginTop: 10, paddingVertical: 10}}>\r\n                    <Text style={styles.subtextStyle}>Did you wear a face mask while attending said event?</Text>\r\n                    {item.q6_1 ? <Text style={styles.answerStyle}>Yes</Text>: <Text style={styles.answerStyle}>No</Text>}\r\n                </View>\r\n            : null}\r\n            <View style={{flexDirection: 'row', justifyContent: 'space-between', marginTop: 10, paddingVertical: 10}}>\r\n                <Text style={styles.subtextStyle}>Do you have a smoking habit?</Text>\r\n                {item.q7 ? <Text style={styles.answerStyle}>Yes</Text>: <Text style={styles.answerStyle}>No</Text>}\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    headingStyle : {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        fontSize: 23\r\n    },\r\n    subtextStyle: {\r\n        color: '#A6A6A6',\r\n        fontSize: 18,\r\n        flex: 5\r\n    },\r\n    answerStyle: {\r\n        fontWeight: 'bold',\r\n        color: 'white',\r\n        fontSize: 25,\r\n        flex: 1,\r\n        textAlign: 'right'\r\n    }\r\n})\r\n\r\nexport default Responses","import React from 'react'\r\nimport {View, StyleSheet, Text} from 'react-native'\r\nimport { AntDesign } from '@expo/vector-icons';\r\n\r\nconst PositiveVer = () => {\r\n    return (\r\n        <View>\r\n            <Text style={styles.textStyle}>Verified. Thank you for your contribution!</Text>\r\n            <AntDesign style={{textAlign: 'center'}} name=\"checkcircleo\" size={80} color=\"#7FD068\" />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    textStyle: {\r\n        color: '#A6A6A6',\r\n        fontSize: 17,\r\n        marginBottom: 20\r\n    }\r\n})\r\n\r\nexport default PositiveVer","import React, {useState, useContext} from 'react'\r\nimport {View, Text, StyleSheet} from 'react-native'\r\nimport { TouchableOpacity } from 'react-native-gesture-handler'\r\nimport {Context as TestContext} from '../context/testContext'\r\nimport {Context as AuthContext} from '../context/AuthContext'\r\n\r\nconst NegativeVer = ({item, navigation, setShow, show}) => {\r\n    const {state} = useContext(AuthContext)\r\n    const {update_test} = useContext(TestContext)\r\n    const [covidResult, setCovidResult] = useState(false)\r\n    const [positive, setPositive] = useState(styles.defaultStyle)\r\n    const [negative, setNegative] = useState(styles.defaultStyle)\r\n    return (\r\n        <View>\r\n            <Text style={styles.textStyle}>To help improve the accuracy of the algorithm, please tell us if you tested positive or negative an official test done within a week of giving this Nitoxi test.</Text>\r\n            <Text style={styles.textStyle}>Your contribution is greatly appreciated!</Text>\r\n            <View style={{flexDirection: 'row', justifyContent: 'space-between', marginVertical: 10}}>\r\n                <View style={{flex: 1}}>\r\n                    <TouchableOpacity\r\n                        onPress = {()=> {\r\n                            setPositive(styles.selectedStyle)\r\n                            setNegative(styles.defaultStyle)\r\n                            setCovidResult(true)\r\n                        }}\r\n                    >\r\n                        <View style={positive}>\r\n                            <Text style={styles.labelStyle}>Positive</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={{flex: 1}}>\r\n                    <TouchableOpacity\r\n                        onPress={()=> {\r\n                            setPositive(styles.defaultStyle)\r\n                            setNegative(styles.selectedStyle)\r\n                            setCovidResult(false)\r\n                        }}\r\n                    >\r\n                        <View style={negative}>\r\n                            <Text style={styles.labelStyle}>Negative</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                \r\n            </View>\r\n            <TouchableOpacity onPress={()=> {\r\n                if (positive === styles.selectedStyle || negative === styles.selectedStyle){\r\n                    setShow(true)\r\n                    update_test({covidResult, testId: item._id})\r\n                }\r\n            }}>\r\n                <View style={styles.submitStyle}>\r\n                    <Text style={styles.submitLabelStyle}>SUBMIT</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    textStyle: {\r\n        color: '#A6A6A6',\r\n        fontSize: 17,\r\n        marginBottom: 7\r\n    },\r\n    defaultStyle: {\r\n        flex: 1,\r\n        backgroundColor: '#464646',\r\n        padding: 10,\r\n        borderRadius: 10,\r\n        marginHorizontal: 5\r\n    },\r\n    selectedStyle: {\r\n        flex: 1,\r\n        backgroundColor: 'black',\r\n        padding: 10,\r\n        borderRadius: 10,\r\n        marginHorizontal: 5\r\n    },\r\n    labelStyle: {\r\n        color: 'white',\r\n        textAlign: 'center', \r\n        fontSize: 17\r\n    },\r\n    submitStyle: {\r\n        backgroundColor: '#743ED2', \r\n        padding: 10, \r\n        borderRadius: 10, \r\n        marginHorizontal: 5\r\n    },\r\n    submitLabelStyle: {\r\n        textAlign: 'center', \r\n        fontSize: 18, \r\n        color: 'white', \r\n        fontWeight: 'bold'\r\n    }\r\n})\r\n\r\nexport default NegativeVer","import React, {useContext, useEffect, useState} from 'react'\r\nimport {View, Text, StyleSheet, ScrollView, Dimensions} from 'react-native'\r\nimport useRecord from \"../hooks/useRecord\"\r\nimport {Context as TestContext} from '../context/testContext'\r\nimport {ProgressChart} from 'react-native-chart-kit'\r\nimport Responses from '../components/Responses'\r\nimport PositiveVer from '../components/PositiveVer'\r\nimport NegativeVer from '../components/NegativeVer'\r\nimport { TouchableOpacity } from 'react-native-gesture-handler'\r\nconst screenHeight = Dimensions.get(\"window\").height\r\n\r\n\r\nconst TestShow = ({navigation}) => {\r\n    const [show, setShow] = useState(false)\r\n    const [searchApi, findOneTest, oneTest, results, error] = useRecord()\r\n    const {state} = useContext(TestContext)\r\n    if (navigation.getParam('param') === '' || navigation.getParam('param') === undefined){\r\n        useEffect(()=>{\r\n            findOneTest(state.testId)\r\n        }, [])\r\n        \r\n    } else {\r\n        useEffect(()=>{\r\n            findOneTest(navigation.getParam('param'))\r\n        }, [])\r\n    }\r\n    \r\n    \r\n\r\n    let heading\r\n    let headingStyle\r\n    let supportingPara\r\n    let color\r\n    let centerPercentStyle\r\n    if (oneTest.percentage < 10){\r\n        color = '127, 208, 104'\r\n        centerPercentStyle = styles.centerPercentStyleGreen\r\n        headingStyle = styles.headingStyleGreen\r\n        heading = \"You're good to go\"\r\n        supportingPara = \"According to our algorithm and the responses that you submitted for this test, you generally seem to be healthy and safe. That being said, please avoid busy locations, maintain social distance, and wear a mask to minimize contraction.\"\r\n    } else if (oneTest.percentage < 60) {\r\n        centerPercentStyle = styles.centerPercentStyleYellow\r\n        color = '223, 163, 72'\r\n        headingStyle = styles.headingStyleYellow\r\n        heading = 'Take precautions'\r\n        supportingPara = \"According to our algorithm and the responses that you submitted for this test, you seem to be not immediately at risk, however there are high chances of you contracting the sickness in the near future unless all necessary precautions are taken.\"\r\n    } else {\r\n        centerPercentStyle = styles.centerPercentStyleRed\r\n        headingStyle = styles.headingStyleRed\r\n        color = '251, 111, 90'    \r\n        heading = 'Get tested, please'\r\n        supportingPara = \"According to our algorithm and the responses that you submitted for this test, you seem to be at a high risk of contraction. Please get an official test done to confirm, and follow all precautionary measures\"\r\n    }\r\n\r\n    return (\r\n        <View style={{flex: 1, backgroundColor: '#424242', paddingHorizontal: 20}}>\r\n            <ScrollView showsVerticalScrollIndicator={false} style={{paddingTop: 10, height: screenHeight-100}}>\r\n\r\n\r\n                <View style={styles.containerStyleRow}>\r\n                    <TouchableOpacity onPress={()=>{navigation.navigate('TestRecord')}}>\r\n                        <View style={{backgroundColor: '#1D1D1D', padding: 10, borderRadius: 7}}>\r\n                            <Text style={{color: 'white'}}>Go Back</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                    <View style={{flexDirection: 'row'}}>\r\n                        <Text style={styles.dayStyle}>{oneTest.testDay}</Text>\r\n                        <Text style={styles.dateStyle}>{oneTest.testDate}</Text>\r\n                    </View>\r\n                </View>\r\n\r\n\r\n                <View style={styles.containerStyle}>\r\n                    \r\n                        \r\n                    {oneTest.percentage ? \r\n                    <View style={{flexDirection: 'row',alignItems: 'center', justifyContent: 'center', paddingVertical: 10}}>\r\n                        <Text style={centerPercentStyle}>{oneTest.percentage}%</Text>\r\n                        <ProgressChart\r\n                            data={{\r\n                                labels: [\"Positive\"],\r\n                                data: [oneTest.percentage/100]\r\n                            }}\r\n                            width={300}\r\n                            height={300}\r\n                            strokeWidth={40}\r\n                            radius={130}\r\n                            chartConfig={{\r\n                                backgroundGradientFrom: \"#1E2923\",\r\n                                backgroundGradientFromOpacity: 0,\r\n                                backgroundGradientTo: \"#08130D\",\r\n                                backgroundGradientToOpacity: 0,\r\n                                color: (opacity = 1) => `rgba(${color}, ${opacity})`,\r\n                                strokeWidth: 4, // optional, default 3\r\n                                barPercentage: 1,\r\n                                useShadowColorFromDataset: false // optional\r\n                            }}\r\n                            hideLegend={true}\r\n                            // style={{backgroundColor: 'black'}}\r\n                        /> \r\n                    </View>\r\n                    \r\n                    : <Text style={{color: 'white', fontSize: 18, textAlign: 'center'}}>Loading...</Text>}\r\n                        \r\n                    \r\n                </View>\r\n                <View style={styles.containerStyle}>\r\n                    <Text style={headingStyle}>{heading}</Text>\r\n                    <Text style={styles.supportingParaStyle}>{supportingPara}</Text>\r\n                </View>\r\n                <View style={styles.containerStyle}>\r\n                    <Text style={{color: 'white',fontWeight: 'bold',fontSize: 23, marginBottom: 10}}>Verification</Text>\r\n                    {show  ? <PositiveVer/>: <NegativeVer show={show} setShow={setShow} navigation={navigation} item={oneTest}/>}\r\n                </View>\r\n                <View style={styles.containerStyle}>\r\n                    <Responses item={oneTest} />\r\n                </View>\r\n                \r\n            </ScrollView>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    containerStyle: {\r\n        backgroundColor: '#292929',\r\n        padding: 20,\r\n        borderRadius: 15,\r\n        justifyContent: 'space-between',\r\n        marginVertical: 10,\r\n        // height: 200\r\n    },\r\n    containerStyleRow: {\r\n        backgroundColor: '#292929',\r\n        padding: 10,\r\n        paddingRight: 20,\r\n        borderRadius: 15,\r\n        flexDirection: 'row', \r\n        justifyContent: 'space-between',\r\n        marginVertical: 10,\r\n        alignItems: 'center'\r\n    },\r\n    dayStyle: {\r\n        color: 'white',\r\n        fontSize: 22,\r\n        fontWeight: 'bold',\r\n        textAlign: 'right',\r\n        marginRight: 7\r\n    },\r\n    dateStyle: {\r\n        color: '#767578',\r\n        fontSize: 22,\r\n        textAlign: 'right'\r\n    },\r\n    headingStyleRed: {\r\n        color: '#FB6F5A',\r\n        fontWeight: 'bold',\r\n        fontSize: 32\r\n    },\r\n    headingStyleYellow: {\r\n        color: '#DFA348',\r\n        fontWeight: 'bold',\r\n        fontSize: 32\r\n    },\r\n    headingStyleGreen: {\r\n        color: '#7FD068',\r\n        fontWeight: 'bold',\r\n        fontSize: 32\r\n    },\r\n    centerPercentStyleRed: {\r\n        fontWeight: 'bold',\r\n        fontSize: 50,\r\n        color: '#FB6F5A',\r\n        position: 'absolute'\r\n    },\r\n    centerPercentStyleYellow: {\r\n        fontWeight: 'bold',\r\n        fontSize: 50,\r\n        color: '#DFA348',\r\n        position: 'absolute'\r\n    },\r\n    centerPercentStyleGreen: {\r\n        fontWeight: 'bold',\r\n        fontSize: 50,\r\n        color: '#7FD068',\r\n        position: 'absolute'\r\n    },\r\n    supportingParaStyle: {\r\n        marginTop: 10,\r\n        color: '#A6A6A6',\r\n        fontSize: 17\r\n    }\r\n})\r\n\r\nexport default TestShow","import React from 'react'\r\nimport {View, StyleSheet, Text, TouchableOpacity} from 'react-native'\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\n\r\nconst RightIcon = ({navigation}) => {\r\n    return (\r\n        <View>\r\n            <TouchableOpacity onPress={()=> {navigation.navigate('Account')}}>\r\n            \r\n            <MaterialCommunityIcons name=\"account\" style={{marginRight: 13}} size={30} color=\"white\" />\r\n            </TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n})\r\n\r\nexport default RightIcon","import React from 'react'\r\nimport {View, StyleSheet, Text, TouchableOpacity} from 'react-native'\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst LeftIcon = ({navigation}) => {\r\n\r\n    const openMenu = () => {\r\n        navigation.openDrawer()\r\n    }\r\n    return (\r\n        <View>\r\n            <TouchableOpacity onPress={openMenu}>\r\n                <Ionicons name=\"ios-menu\" style={{marginLeft: 13}} size={30} color=\"white\" />\r\n            </TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n})\r\n\r\nexport default LeftIcon","import React from 'react'\r\nimport {View, ScrollView, Text, StyleSheet, TouchableOpacity} from 'react-native'\r\nimport RealQuestions from \"../components/RealQuestions\"\r\n\r\n\r\n\r\nconst QuestionsScreen = ({navigation}) => {\r\n    const state = navigation.getParam('state')\r\n    return (\r\n        <View style={{flex: 1, backgroundColor: '#424242', paddingHorizontal: 20}}>\r\n            <View style={styles.containerStyleRow}>\r\n                <TouchableOpacity onPress={()=>{navigation.navigate('Dashboard')}}>\r\n                    <View style={{backgroundColor: '#1D1D1D', padding: 10, borderRadius: 7}}>\r\n                        <Text style={{color: 'white'}}>Go Back</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <RealQuestions authState={state} navigation={navigation} />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    containerStyle: {\r\n        backgroundColor: '#292929',\r\n        padding: 20,\r\n        borderRadius: 15,\r\n        justifyContent: 'space-between',\r\n        marginVertical: 10,\r\n        // height: 200\r\n    },\r\n    containerStyleRow: {\r\n        backgroundColor: '#292929',\r\n        padding: 10,\r\n        paddingRight: 20,\r\n        borderRadius: 15,\r\n        flexDirection: 'row', \r\n        justifyContent: 'flex-start',\r\n        marginVertical: 10,\r\n        alignItems: 'center'\r\n    },\r\n    dayStyle: {\r\n        color: 'white',\r\n        fontSize: 22,\r\n        fontWeight: 'bold',\r\n        textAlign: 'right',\r\n        marginRight: 7\r\n    },\r\n    dateStyle: {\r\n        color: '#767578',\r\n        fontSize: 22,\r\n        textAlign: 'right'\r\n    },\r\n    headingStyleRed: {\r\n        color: '#FB6F5A',\r\n        fontWeight: 'bold',\r\n        fontSize: 32\r\n    },\r\n    headingStyleYellow: {\r\n        color: '#DFA348',\r\n        fontWeight: 'bold',\r\n        fontSize: 32\r\n    },\r\n    headingStyleGreen: {\r\n        color: '#7FD068',\r\n        fontWeight: 'bold',\r\n        fontSize: 32\r\n    },\r\n    centerPercentStyleRed: {\r\n        fontWeight: 'bold',\r\n        fontSize: 50,\r\n        color: '#FB6F5A',\r\n        position: 'absolute'\r\n    },\r\n    centerPercentStyleYellow: {\r\n        fontWeight: 'bold',\r\n        fontSize: 50,\r\n        color: '#DFA348',\r\n        position: 'absolute'\r\n    },\r\n    centerPercentStyleGreen: {\r\n        fontWeight: 'bold',\r\n        fontSize: 50,\r\n        color: '#7FD068',\r\n        position: 'absolute'\r\n    },\r\n    supportingParaStyle: {\r\n        marginTop: 10,\r\n        color: '#A6A6A6',\r\n        fontSize: 17\r\n    }\r\n})\r\n\r\nexport default QuestionsScreen","import React from 'react'\r\nimport {View, ScrollView, Text, StyleSheet} from 'react-native'\r\nimport QRCodeModal from '../components/QRCodeModal'\r\n\r\n\r\nconst CameraScreen = ({navigation}) => {\r\n    const formikProps = navigation.getParam('props')\r\n    return (\r\n        <View style={{flex: 1, backgroundColor: '#424242', paddingHorizontal: 20}}>\r\n            <QRCodeModal \r\n                value={formikProps.values.qrcode} \r\n                setValue={formikProps.setFieldValue} \r\n                navigation={navigation}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default CameraScreen","import React, {useEffect} from 'react'\r\nimport {View, Text, StyleSheet} from 'react-native'\r\nimport useGlobalApi from '../hooks/useGlobalApi'\r\n\r\nconst StatsModule = ({country}) => {\r\n    const [globalData, findActualGlobal] = useGlobalApi()\r\n    useEffect(()=> {\r\n        findActualGlobal()\r\n    },[])\r\n    return (\r\n        <View style={styles.containerStyle}>\r\n            <Text style={styles.headingStyle} >Global</Text>\r\n            <View style={{marginBottom: 20}}>\r\n                <Text style={styles.labelStyle}>ACTIVE</Text>\r\n                <Text style={styles.statStyle}>{globalData['Active Cases_text']}</Text>\r\n            </View>\r\n            <View style={{flexDirection: 'row', marginBottom: 20}}>\r\n                <View style={{flex: 1}}>\r\n                    <Text style={styles.labelStyle}>RECENT</Text>\r\n                    <Text style={styles.statStyle} >{globalData['New Cases_text']}</Text>\r\n                </View>\r\n                <View style={{flex: 1}}>\r\n                    <Text style={styles.labelStyle}>RECENT DEATHS</Text>\r\n                    <Text style={{fontWeight: 'bold', fontSize: 35, color: '#FB6F5A'}} >{globalData['New Cases_text']}</Text>\r\n                </View>\r\n            </View>\r\n            <View style={{marginBottom: 20}}>\r\n                <Text style={styles.labelStyle}>TOTAL</Text>\r\n                <Text style={styles.statStyle}>{globalData['Total Cases_text']}</Text>\r\n            </View>\r\n            <View style={{marginBottom: 20}}>\r\n                <Text style={styles.labelStyle}>TOTAL DEATHS</Text>\r\n                <Text style={{fontWeight: 'bold', fontSize: 35, color: '#FB6F5A'}}>{globalData['Total Deaths_text']}</Text>\r\n            </View>\r\n            <View style={{marginBottom: 20}}>\r\n                <Text style={styles.labelStyle}>TOTAL RECOVERED</Text>\r\n                <Text style={{fontWeight: 'bold', fontSize: 35, color: '#7FD068'}}>{globalData['Total Recovered_text']}</Text>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    containerStyle: {\r\n        padding: 20,\r\n        backgroundColor: '#292929',\r\n        borderRadius: 10,\r\n        marginBottom: 15\r\n    },\r\n    headingStyle: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        fontSize: 25,\r\n        marginBottom: 10\r\n    },\r\n    labelStyle: {\r\n        color: 'white',\r\n        opacity: 0.66\r\n    },\r\n    statStyle: {\r\n        color: '#4489E3',\r\n        fontWeight: 'bold',\r\n        fontSize: 35\r\n    }\r\n})\r\n\r\nexport default StatsModule","import React, {useEffect} from 'react'\r\nimport {View, Text, StyleSheet} from 'react-native'\r\nimport useGlobalApi from '../hooks/useGlobalApi'\r\n\r\nconst StatsModule = ({country}) => {\r\n    const [data, findGlobal] = useGlobalApi()\r\n    useEffect(()=> {\r\n        findGlobal(country)\r\n    },[])\r\n    return (\r\n        <View style={styles.containerStyle}>\r\n            <Text style={styles.headingStyle} >{country.charAt(0).toUpperCase() + country.slice(1)}</Text>\r\n            {/* <View style={{marginBottom: 20}}>\r\n                <Text style={styles.labelStyle}>ACTIVE</Text>\r\n                <Text style={styles.statStyle}>{data['Active Cases_text']}</Text>\r\n            </View>\r\n            <View style={{flexDirection: 'row', marginBottom: 20}}>\r\n                <View style={{flex: 1}}>\r\n                    <Text style={styles.labelStyle}>RECENT</Text>\r\n                    {data['New Cases_text'] ? <Text style={styles.statStyle} >{data['New Cases_text']}</Text>: <Text style={styles.statStyle}>N/A</Text>}\r\n                </View>\r\n                <View style={{flex: 1}}>\r\n                    <Text style={styles.labelStyle}>RECENT DEATHS</Text>\r\n                    {data['New Cases_text'] ? <Text style={{...styles.statStyle, color: '#FB6F5A'}} >{data['New Deaths_text']}</Text>: <Text style={{...styles.statStyle, color: '#FB6F5A'}}>N/A</Text>}\r\n                </View>\r\n            </View> */}\r\n            <View style={{marginBottom: 20}}>\r\n                <Text style={styles.labelStyle}>TOTAL</Text>\r\n                <Text style={styles.statStyle}>{data['Total Cases_text']}</Text>\r\n            </View>\r\n            <View style={{marginBottom: 20}}>\r\n                <Text style={styles.labelStyle}>TOTAL DEATHS</Text>\r\n                <Text style={{fontWeight: 'bold', fontSize: 35, color: '#FB6F5A'}}>{data['Total Deaths_text']}</Text>\r\n            </View>\r\n            <View style={{marginBottom: 20}}>\r\n                <Text style={styles.labelStyle}>TOTAL RECOVERED</Text>\r\n                <Text style={{fontWeight: 'bold', fontSize: 35, color: '#7FD068'}}>{data['Total Recovered_text']}</Text>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    containerStyle: {\r\n        padding: 20,\r\n        backgroundColor: '#292929',\r\n        borderRadius: 10,\r\n        marginBottom: 15\r\n    },\r\n    headingStyle: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        fontSize: 25,\r\n        marginBottom: 10\r\n    },\r\n    labelStyle: {\r\n        color: 'white',\r\n        opacity: 0.66\r\n    },\r\n    statStyle: {\r\n        color: '#4489E3',\r\n        fontWeight: 'bold',\r\n        fontSize: 35\r\n    }\r\n})\r\n\r\nexport default StatsModule","import React from 'react'\r\nimport {View, Text, StyleSheet, ScrollView, Dimensions} from 'react-native'\r\nimport GlobalModule from '../components/GlobalModule'\r\nimport StatsModule from '../components/StatsModule'\r\nconst screenHeight = Dimensions.get(\"window\").height\r\n\r\n\r\nconst StatsScreen = () => {\r\n    return (\r\n        <View style={{flex: 1, backgroundColor: '#424242', paddingHorizontal: 20}}>\r\n            <ScrollView showsVerticalScrollIndicator={false} style={{paddingVertical: 20, height: screenHeight-80}}>\r\n\r\n            \r\n                <Text style={styles.headingStyle}>Statistics</Text>\r\n                <Text style={{color: 'white', opacity: 0.5, marginVertical: 10, backgroundColor: '#424242', borderRadius: 15}}>All the following stats are fetched from the WorldBank API</Text>\r\n\r\n                <GlobalModule/>\r\n                <StatsModule country={'Pakistan'}/>\r\n                <StatsModule country={'Canada'}/>\r\n                <StatsModule country={'USA'}/>\r\n                {/* <StatsModule country={'India'}/> */}\r\n            </ScrollView>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    headingStyle: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        fontSize: 32,\r\n        marginBottom: 10\r\n    }\r\n})\r\n\r\nexport default StatsScreen","import React, {useContext, useEffect} from 'react'\r\nimport {View, Text, StyleSheet, Button, ScrollView} from 'react-native'\r\nimport { TouchableOpacity } from 'react-native-gesture-handler'\r\nimport {Context as AuthContext} from '../context/AuthContext'\r\nimport useUserInfo from '../hooks/useUserInfo'\r\n\r\nconst AccountScreen = () => {\r\n    const [findUser, user, error] = useUserInfo()\r\n    const {state, signout} = useContext(AuthContext)\r\n\r\n    useEffect(()=>{findUser(state.token)},[])\r\n\r\n    return (\r\n        <View style={{flex: 1, backgroundColor: '#424242', padding: 20, justifyContent: 'space-between'}}>\r\n            <View >\r\n                <Text style={styles.headingStyle}>Account</Text>\r\n                <View style={{flexDirection: 'row', marginBottom: 20}}>\r\n                    <View style={{flex: 1}}>\r\n                        <Text style={styles.label}>FIRST NAME</Text>\r\n                        <Text style={styles.value}>{user.firstName}</Text>\r\n                    </View>\r\n                    <View style={{flex: 1}}>\r\n                        <Text style={styles.label}>LAST NAME</Text>\r\n                        <Text style={styles.value}>{user.lastName}</Text>\r\n                    </View>\r\n                </View>\r\n\r\n\r\n\r\n                <View style={{marginBottom: 20}}>\r\n                    <Text style={styles.label}>EMAIL</Text>\r\n                    <ScrollView horizontal showsHorizontalScrollIndicator={false}>\r\n                        <Text style={styles.value}>{user.email}</Text>\r\n                    </ScrollView>\r\n                </View>\r\n\r\n\r\n                <View style={{flexDirection: 'row'}}>\r\n                    <View style={{flex: 1}}>\r\n                        <Text style={styles.label}>GENDER</Text>\r\n                        <Text style={styles.value}>{user.gender}</Text>\r\n                    </View>\r\n                    <View style={{flex: 1}}>\r\n                        <Text style={styles.label}>AGE</Text>\r\n                        <Text style={styles.value}>{user.age}</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <TouchableOpacity onPress={()=>{signout()}}>\r\n                <View style={styles.logoutButton}>\r\n                    <Text style={styles.logoutButtonLabel}>Sign Out</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    headingStyle: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        fontSize: 32,\r\n        marginBottom: 10\r\n    },\r\n    logoutButton: {\r\n        backgroundColor: '#292929',\r\n        padding: 15,\r\n        borderRadius: 10\r\n    },\r\n    logoutButtonLabel: {\r\n        color: '#FB6F5A',\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center'\r\n    },\r\n    label: {\r\n        color: 'white',\r\n        opacity: 0.7,\r\n        fontSize: 16\r\n    },\r\n    value: {\r\n        color: 'white',\r\n        fontSize: 24,\r\n        fontWeight: 'bold'\r\n    }\r\n})\r\n\r\nexport default AccountScreen","import trackerApi from '../api/tracker'\r\nimport {useState, useEffect} from 'react'\r\n\r\nexport default () => {\r\n    const [error, setError] = useState('')\r\n    const [user, setUser] = useState({})\r\n\r\n    const findUser = async (token) => {\r\n        try {\r\n            const response = await trackerApi.post('/finduser', {token})\r\n            setUser(response.data)\r\n        } catch (err) {\r\n            setError('Something went wrong')\r\n        }\r\n    }\r\n    return [findUser, user, error]\r\n}\r\n","import React from 'react'\r\nimport {View, Text, StyleSheet, Image, Dimensions} from 'react-native'\r\nimport { ScrollView } from 'react-native-gesture-handler'\r\nimport TeamCard from '../components/TeamCard'\r\nconst screenHeight = Dimensions.get(\"window\").height\r\n\r\nconst AboutScreen = () => {\r\n    return (\r\n        <View style={{flex: 1, backgroundColor: '#424242', paddingHorizontal: 20}}>\r\n            <ScrollView showsVerticalScrollIndicator={false} style={{height: screenHeight-100}}>\r\n            <View style={{marginBottom: 10}}>\r\n                <Text style={styles.headingStyle}>The Vision</Text>\r\n                <Text style={styles.paraStyle}>Nitoxi, created by Hammad Gadit, Bassam Ahmed, Sabeer Asad, and Zain Ibrahim primarily focuses on the infusion of healthcare and technology. Having gone through the misery of losing family members during these last two years, we knew we had to make a change. Our experience with the pandemic led us to create a product that aims to reduce the transmission by detecting changes in sensitivity to smell. </Text>\r\n                <Text style={styles.paraStyle}>Nitoxi aims to test people actively rather than passively. It has two components: scratch cards that release a fragrance and an app that tracks the user’s sensitivity to smell.</Text>\r\n                <Text style={styles.paraStyle}>Nitoxi stands out in the market by offering a broad essence of unique features. Amidst the pandemic, companies have high stakes on their sales and budget. Our product aims to cut down the chain of transmission.</Text>\r\n            </View>\r\n            <View>\r\n                <Text style={styles.headingStyle}> The Team</Text>\r\n                <Text style={styles.paraStyle}>Meet the people that brought Nitoxi into existence and who continue to strive for it's improvement</Text>\r\n            </View>\r\n            <TeamCard image='https://i.ibb.co/NCNzR63/image.png' name='Hammad Gadit' title='CHIEF EXECUTIVE OFFICER' align='right' />\r\n            <TeamCard image='https://i.ibb.co/SvhxZcP/image.png' name='Bassam Ahmed' title='CHIEF TECHNICAL OFFICER' align='left' />\r\n            <TeamCard image='https://i.ibb.co/m8xhRGT/image.png' name='Sabeer Asad' title='HEAD OF RESEARCH AND DEVELOPMENT' align='right' />\r\n            <TeamCard image='https://i.ibb.co/bdwG0P0/image.png' name='Karan Vankwani' title='CHIEF OPERATIONS OFFICER' align='left' />\r\n            <TeamCard image='https://i.ibb.co/4jf74RJ/image.png' name='Zain Ibrahim' title='FORMER OPERATIONS OFFICER' align='right' />\r\n            {/* <TeamCard image='https://i.ibb.co/8DCkcjz/image.png' name='Shayaan Salahuddin' title='MARKETING MANAGER' align='right' /> */}\r\n            </ScrollView>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    headingStyle: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        fontSize: 32,\r\n        marginVertical: 20\r\n    },\r\n    paraStyle: {\r\n        color: '#CCCCCC', \r\n        fontSize: 16, \r\n        marginBottom: 20\r\n    }\r\n\r\n})\r\n\r\nexport default AboutScreen\r\n\r\n// Nitoxi, created by Hammad Gadit, Bassam Ahmed, Sabeer Asad, and Zain Ibrahim primarily focuses on the infusion of healthcare and technology. Having gone through the misery of losing family members to this pandemic, we knew we had to make a change. Our experience with the pandemic led us to create a product that aims to reduce the transmission of COVID-19 by detecting changes in sensitivity to smell. \r\n\r\n// Nitoxi aims to test Coronavirus actively rather than passively. It has two components: scratch cards that release a fragrance and an app that tracks the user’s sensitivity to smell. \r\n\r\n// Nitoxi stands out in the market by offering a broad essence of unique features. Amidst the pandemic, companies have high stakes on their sales and budget. Our product aims to cut down the chain of transmission . \r\n\r\n// Nitoxi is intended to be marketed towards individuals, large businesses, hospitals, and educational institutes.","import React from 'react'\r\nimport {View, StyleSheet, Text} from 'react-native'\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport GetTested from '../components/GetTested'\r\n\r\n\r\nconst IntroScreen = ({navigation})=> {\r\n    return (\r\n        <View style={{flex: 1, backgroundColor: '#743ED2'}}>\r\n            <MaterialCommunityIcons name=\"microscope\" style={{marginTop: 30, textAlign: 'center', marginBottom: 20}} size={100} color=\"white\" />\r\n            <View style={{flex: 1, backgroundColor: '#424242', borderTopLeftRadius: 25, borderTopRightRadius: 25, padding: 30, justifyContent: 'space-between'}}>\r\n                <View>\r\n                    <Text style={styles.headingStyle}>Welcome!</Text>\r\n                    <Text style={styles.paraStyle}>Founded during intellectual conversations between friends regarding the pandemic, Nitoxi has evolved in the past few months from an idea to a reality. Our vision to make a significant impact on the transmission of the deadly coronavirus has come one step closer.</Text>\r\n                    <Text style={styles.paraStyle}>As we have come to realize over the past few months, nothing is more inspiring than a community, which is willing to make a change. We thank all of you for joining us on this journey to play your part in curtailing the spread of this virus and hence saving countless lives, which are still to be lived.</Text>\r\n                    <Text style={styles.paraStyle}>We would like to end this message with a quote that resonates with us  “Your life doesn't get better by chance, it gets better by change”. We would like to encourage all of you to be the change you want to make in order to reduce the misery caused by this pandemic.</Text> \r\n                </View>\r\n                <View style={{margin: 3, alignSelf: 'stretch'}}>\r\n                    <GetTested navigation={navigation}/>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nIntroScreen.navigationOptions = () => {\r\n    return {\r\n      headerShown: false,\r\n    };\r\n  }\r\n\r\nconst styles = StyleSheet.create({\r\n    headingStyle: {\r\n        fontWeight: 'bold',\r\n        fontSize: 30,\r\n        color: '#A87EEF',\r\n        marginBottom: 20\r\n    },\r\n    paraStyle: {\r\n        color: 'white',\r\n        opacity: 0.7,\r\n        fontSize: 16,\r\n        marginBottom: 10\r\n    }\r\n})\r\n\r\nexport default IntroScreen","import React, {useContext, useState, useEffect} from 'react'\r\nimport {View, Text, StyleSheet, ScrollView} from 'react-native'\r\nimport {LineChart, BarChart, PieChart} from \"react-native-chart-kit\";\r\nimport { Dimensions } from \"react-native\";\r\nconst screenWidth = Dimensions.get(\"window\").width;\r\nimport useGraphContent from '../hooks/useGraphContent'\r\nimport usePieContent from '../hooks/usePieContent'\r\nimport {Context as AuthContext} from '../context/AuthContext'\r\n// import { RESULTS } from 'react-native-permissions';\r\n\r\nconst screenHeight = Dimensions.get(\"window\").height\r\n\r\n\r\nconst GraphScreen = () => {\r\n    const {state} = useContext(AuthContext)\r\n    const [findGraphContent, graphContent, pieError] = useGraphContent()\r\n    const [findPieContent, pieContent, error] = usePieContent()\r\n    useEffect(()=>{findGraphContent(state.token)},[])\r\n    useEffect(()=> {findPieContent(state.token)},[])\r\n\r\n    let data ={}\r\n    if (graphContent){\r\n      data = {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            data: graphContent,\r\n            color: (opacity = 0.2) => `rgba(134, 65, 244, 1)`, // optional\r\n            strokeWidth: 2 // optional\r\n          }\r\n        ]\r\n      };\r\n    } else {\r\n      data = {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            data: [1,1,1,1],\r\n            color: (opacity = 0.2) => `rgba(134, 65, 244, 1)`, // optional\r\n            strokeWidth: 2 // optional\r\n          }\r\n        ]\r\n      };\r\n    } \r\n     \r\n\r\n    let pieData = []\r\n    if (pieContent){\r\n      pieData = [\r\n        {\r\n          name: \"Good to go\",\r\n          population: pieContent.safe,\r\n          color: \"#7FD068\",\r\n          legendFontColor: \"#7FD068\",\r\n          legendFontSize: 14\r\n        },\r\n        {\r\n          name: \"Get Tested\",\r\n          population: pieContent.warning,\r\n          color: \"#FB6F5A\",\r\n          legendFontColor: \"#FB6F5A\",\r\n          legendFontSize: 15\r\n        },\r\n        {\r\n          name: \"Take Precations\",\r\n          population: pieContent.danger,\r\n          color: \"#DFA348\",\r\n          legendFontColor: \"#DFA348\",\r\n          legendFontSize: 15\r\n        }\r\n    ]\r\n\r\n    } else {\r\n      pieData = [\r\n        {\r\n          name: \"Good to go\",\r\n          population: 1,\r\n          color: \"#7FD068\",\r\n          legendFontColor: \"#7FD068\",\r\n          legendFontSize: 14\r\n        },\r\n        {\r\n          name: \"Get Tested\",\r\n          population: 1,\r\n          color: \"#FB6F5A\",\r\n          legendFontColor: \"#FB6F5A\",\r\n          legendFontSize: 15\r\n        },\r\n        {\r\n          name: \"Take Precations\",\r\n          population: 1,\r\n          color: \"#DFA348\",\r\n          legendFontColor: \"#DFA348\",\r\n          legendFontSize: 15\r\n        }\r\n    ]\r\n    }\r\n      \r\n\r\n    return (\r\n        <View style={{flex: 1, backgroundColor: '#424242', paddingHorizontal: 20}}>\r\n            <ScrollView showsVerticalScrollIndicator={false} style={{paddingVertical: 20, height: screenHeight - 100}}>\r\n\r\n            <Text style={styles.headingStyle}>Graphs</Text>\r\n            <View style={{justifyContent: 'center', alignItems :'center', marginBottom: 20}}>\r\n                    {graphContent?<LineChart\r\n                        yAxisSuffix={'%'}\r\n                        xAxisLabel={\"Tests\"}\r\n                        // hidePointsAtIndex={[0,3]}\r\n                        // yAxisInterval={\"100\"}\r\n                        fromZero\r\n                        bezier\r\n                        data={data}\r\n                        width={screenWidth*0.90}\r\n                        height={220}\r\n                        style={{borderRadius: 15, backgroundColor: '#141414', paddingTop: 20, marginBottom: -20}}\r\n                        chartConfig={{\r\n                            \r\n                            backgroundColor: \"#e26a00\",\r\n                            backgroundGradientFrom: \"#141414\",\r\n                            backgroundGradientFromOpacity: 0,\r\n                            backgroundGradientToOpacity: 0,\r\n                            backgroundGradientTo: \"#141414\",\r\n                            decimalPlaces: 2, // optional, defaults to 2dp\r\n                            color: (opacity = 0.1) => `rgba(255, 255, 255, 0.5)`,\r\n                            labelColor: (opacity = 0.1) => `rgba(255, 255, 255, 0.5)`,\r\n                            style: {\r\n                            borderRadius: 10\r\n                            },\r\n                            propsForDots: {\r\n                            r: \"4\",\r\n                            strokeWidth: \"0\",\r\n                            stroke: \"#ffa726\"\r\n                            }\r\n                        }}\r\n                        />: <Text>Loading</Text>}\r\n                        <Text style={{color: 'white', opacity: 0.5}}>Recent Tests</Text>\r\n            </View>\r\n            <View style={{marginBottom: 20}}>\r\n            {graphContent?<BarChart\r\n                                // style={graphStyle}\r\n                                \r\n                                style={{borderRadius: 15, backgroundColor: '#141414', paddingTop: 20}}\r\n                                showValuesOnTopOfBars={true}\r\n                                data={data}\r\n                                width={screenWidth*0.90}\r\n                                height={220}\r\n                                yAxisSuffix=\"%\"\r\n                                chartConfig={{\r\n                            \r\n                                    backgroundColor: \"#e26a00\",\r\n                                    backgroundGradientFrom: \"#141414\",\r\n                                    backgroundGradientFromOpacity: 0,\r\n                                    backgroundGradientToOpacity: 0,\r\n                                    backgroundGradientTo: \"#141414\",\r\n                                    decimalPlaces: 2, // optional, defaults to 2dp\r\n                                    color: (opacity = 0.1) => `rgba(255, 255, 255, 0.5)`,\r\n                                    labelColor: (opacity = 0.1) => `rgba(255, 255, 255, 1)`,\r\n                                    style: {\r\n                                    borderRadius: 10\r\n                                    },\r\n                                    propsForDots: {\r\n                                    r: \"4\",\r\n                                    strokeWidth: \"0\",\r\n                                    stroke: \"#ffa726\"\r\n                                    }\r\n                                }}\r\n                                verticalLabelRotation={30}\r\n                            />: <Text>Loading</Text>}\r\n            </View>\r\n            <View style={{marginBottom: 100, justifyContent: 'space-between', backgroundColor: '#141414', height: 260, borderRadius: 15}}>\r\n            {pieContent? <PieChart\r\n                style={{borderRadius: 15, backgroundColor: '#141414', paddingTop: 20, marginBottom: -20, alignSelf: 'center'}}\r\n                data={pieData}\r\n                width={190}\r\n                height={220}\r\n                chartConfig={{\r\n                            \r\n                    backgroundColor: \"#e26a00\",\r\n                    backgroundGradientFrom: \"red\",\r\n                    backgroundGradientFromOpacity: 1,\r\n                    backgroundGradientToOpacity: 1,\r\n                    backgroundGradientTo: \"green\",\r\n                    decimalPlaces: 2, // optional, defaults to 2dp\r\n                    color: (opacity = 0.1) => `rgba(255, 255, 255, 0.5)`,\r\n                    labelColor: (opacity = 0.1) => `rgba(255, 255, 255, 1)`,\r\n                    style: {\r\n                    borderRadius: 10\r\n                    },\r\n                    propsForDots: {\r\n                    r: \"4\",\r\n                    strokeWidth: \"0\",\r\n                    stroke: \"#ffa726\"\r\n                    }\r\n                }}\r\n                hasLegend={false}\r\n                accessor={\"population\"}\r\n                backgroundColor={\"transparent\"}\r\n                // paddingLeft={\"15\"}\r\n                center={[45, -20]}\r\n                \r\n            />: <Text>Loading</Text>}\r\n            <View style={{flexDirection: 'row', justifyContent: 'space-around', margin: 10}}>\r\n                <Text style={{color: '#7FD068', fontWeight: 'bold'}}>HEALTHY</Text>\r\n                <Text style={{color: '#DFA348', fontWeight: 'bold'}}>TAKE PRECAUTIONS</Text>\r\n                <Text style={{color: '#FB6F5A', fontWeight: 'bold'}}>GET TESTED</Text>\r\n            </View>\r\n            </View>\r\n            </ScrollView>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    headingStyle: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        fontSize: 32,\r\n        marginBottom: 10\r\n    }\r\n})\r\n\r\nexport default GraphScreen","import trackerApi from '../api/tracker'\r\nimport {useState, useEffect} from 'react'\r\n\r\nexport default (token) => {\r\n    const [pieError, setError] = useState('')\r\n    const [pieContent, setPieContent] = useState({safe: 1, danger: 1, warning: 1})\r\n\r\n    const findPieContent = async (token) => {\r\n        try {\r\n            const response = await trackerApi.post('/getpiecontent', {token})\r\n            setPieContent(response.data)\r\n        } catch (err) {\r\n            setError('Something went wrong')\r\n        }\r\n    }\r\n    return [findPieContent, pieContent, pieError]\r\n}\r\n","import React from 'react'\r\nimport {View, SafeAreaView, ScrollView, Text, StyleSheet} from 'react-native'\r\nimport {DrawerItems} from 'react-navigation-drawer'\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\n\r\nconst SideBar = (props) => {\r\n    return (\r\n        <SafeAreaView style={{backgroundColor: '#743ED2', flex: 1}}>\r\n            <View style={{padding: 10}}>\r\n                <View style={{flexDirection: 'row', justifyContent: 'space-between', marginBottom: 20, padding: 5, marginTop: 20}}>\r\n                    <View >\r\n                        <Text style={{color: 'white', fontWeight: '700', fontSize: 40, textAlign: 'left'}}>NITOXI</Text>\r\n                        {/* <Text style={{color: 'white', fontWeight: '300', fontSize: 10, bottom: 5, textAlign: 'left'}}>FIGHTING COVID TOGETHER</Text> */}\r\n                    </View>\r\n                    <MaterialCommunityIcons name=\"microscope\" size={70} color=\"white\" />\r\n                </View>\r\n                <ScrollView style={{backgroundColor: '#743ED2'}}>\r\n                    <DrawerItems\r\n                        itemsContainerStyle={{borderRadius: 10}}\r\n                        itemStyle={{borderRadius: 10}}\r\n                        activeBackgroundColor='#3A1F69'\r\n                        labelStyle={{color: 'white', fontSize: 16, fontWeight: '500', margin: 15}}\r\n                        {...props}\r\n                    />\r\n                </ScrollView>\r\n            </View>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default SideBar","import React from 'react'\nimport {Dimensions, View, Text, Button, SafeAreaView} from 'react-native'\nimport {createAppContainer, createSwitchNavigator} from 'react-navigation'\nimport {createStackNavigator} from 'react-navigation-stack'\nimport dashboardScreen from \"./src/screens/dashboard\"\nimport testRecordScreen from \"./src/screens/TestRecord\"\nimport recentDetails from \"./src/screens/RecentDetails\"\nimport SignupScreen from './src/screens/SignupScreen'\nimport SigninScreen from './src/screens/SigninScreen'\nimport TestShowScreen from './src/screens/TestShow'\nimport RightIcon from './src/components/rightIcon'\nimport LeftIcon from './src/components/leftIcon'\n\nimport QuestionsScreen from './src/screens/QuestionsScreen'\nimport CameraScreen from './src/screens/CameraScreen'\n\nimport StatsScreen from './src/screens/StatsScreen'\nimport AccountScreen from './src/screens/AccountScreen'\nimport AboutScreen from './src/screens/AboutScreen'\nimport IntroScreen from './src/screens/IntroScreen'\nimport GraphScreen from './src/screens/GraphScreen'\nimport SideBar from './src/screens/SideBar'\n\nimport {Provider as AuthProvider} from \"./src/context/AuthContext\"\nimport {Provider as TestProvider} from \"./src/context/testContext\"\nimport {setNavigator} from './src/navigationRef'\nimport { createDrawerNavigator, DrawerItems } from 'react-navigation-drawer'\nimport dashboard from './src/screens/dashboard'\nimport { ScrollView } from 'react-native'\n\nconst screenHeight = Dimensions.get(\"window\").height\nconst screenWidth = Dimensions.get(\"window\").width\n\nconst defaultNavOptions= {\n  title: 'NITOXI',\n  headerStyle: {\n    backgroundColor: '#743ED2',\n    height: 80\n  },\n  headerTitleStyle: {\n    color: 'white',\n    // backgroundColor: 'black',\n    fontSize: 23,\n    letterSpacing: 10,\n    textAlign: 'center'\n  },\n  headerBackTitleStyle: {\n    color: 'white'\n  },\n  headerBackTitle: 'Back',\n  headerLeft: ({navigation})=> (\n    <LeftIcon navigation={navigation}/>\n  ),\n  headerRight: ()=> (\n    <RightIcon/>\n  ),\n}\n\nconst navOptions= ({navigation}) => ({\n  title: 'NITOXI',\n  headerStyle: {\n    backgroundColor: '#743ED2',\n    height: screenHeight * 0.12\n  },\n  headerTitleStyle: {\n    color: 'white',\n    // backgroundColor: 'black',\n    fontSize: 23,\n    letterSpacing: 10,\n    textAlign: 'center'\n  },\n  headerBackTitleStyle: {\n    color: 'white'\n  },\n  headerBackTitle: 'Back',\n  headerLeft: ({navigation})=> (\n    <LeftIcon navigation={navigation}/>\n  ),\n  headerRight: ()=> (\n    <RightIcon/>\n  )\n})\n\n//\n\nconst switchNavigator = createSwitchNavigator({\n  loginFlow: createStackNavigator({\n    Signin: SigninScreen,\n    Signup: SignupScreen,\n    Intro: IntroScreen\n  }),\n  loggedinFlow: createDrawerNavigator({\n    HOME: createStackNavigator({\n      Dashboard: {\n        screen: dashboardScreen,\n        navigationOptions: ({navigation}) => {\n          return {\n            headerLeft: () => <LeftIcon navigation={navigation} />,\n            headerRight: () => <RightIcon navigation={navigation}/>\n          }\n        }\n      },\n      Questions: {\n        screen: QuestionsScreen,\n        navigationOptions: ({navigation}) => {\n          return {\n            headerLeft: () => <LeftIcon navigation={navigation} />,\n            headerRight: () => <RightIcon navigation={navigation}/>\n          }\n        }\n      },\n      Camera: {\n        screen: CameraScreen,\n        navigationOptions: ({navigation}) => {\n          return {\n            headerLeft: () => <LeftIcon navigation={navigation} />,\n            headerRight: () => <RightIcon navigation={navigation}/>\n          }\n        }\n      },\n      Intro: {\n        screen: IntroScreen,\n        navigationOptions: ({navigation}) => {\n          return {\n            headerLeft: () => <LeftIcon navigation={navigation} />,\n            headerRight: () => <RightIcon navigation={navigation}/>\n          }\n        }\n      }\n    },\n    {\n      defaultNavigationOptions: defaultNavOptions\n    }),\n    TESTS: createStackNavigator({\n      TestRecord: {\n        screen: testRecordScreen,\n        navigationOptions: ({navigation}) => {\n          return {\n            headerLeft: () => <LeftIcon navigation={navigation} />,\n            headerRight: () => <RightIcon navigation={navigation}/>\n          }\n        }\n      },\n      TestShow: {\n        screen: TestShowScreen,\n        navigationOptions: ({navigation}) => {\n          return {\n            headerLeft: () => <LeftIcon navigation={navigation} />,\n            headerRight: () => <RightIcon navigation={navigation}/>\n          }\n        }\n      }\n    },\n    {\n      defaultNavigationOptions: navOptions\n    }),\n    ACCOUNT: createStackNavigator({\n      Account: {\n        screen: AccountScreen,\n        navigationOptions: ({navigation}) => {\n          return {\n            headerLeft: () => <LeftIcon navigation={navigation} />,\n            headerRight: () => <RightIcon navigation={navigation}/>\n          }\n        }\n      }\n    },\n    {\n      defaultNavigationOptions: navOptions\n    }),\n    ABOUT: createStackNavigator({\n      About: {\n        screen: AboutScreen,\n        navigationOptions: ({navigation}) => {\n          return {\n            headerLeft: () => <LeftIcon navigation={navigation} />,\n            headerRight: () => <RightIcon navigation={navigation}/>\n          }\n        }\n      }\n    },\n    {\n      defaultNavigationOptions: navOptions\n    }),\n    STATISTICS: createStackNavigator({\n      Statistics: {\n        screen: StatsScreen,\n        navigationOptions: ({navigation}) => {\n          return {\n            headerLeft: () => <LeftIcon navigation={navigation} />,\n            headerRight: () => <RightIcon navigation={navigation}/>\n          }\n        }\n      }\n    },\n    {\n      defaultNavigationOptions: defaultNavOptions\n    }),\n    GRAPHS: createStackNavigator({\n      Graphs: {\n        screen: GraphScreen,\n        navigationOptions: ({navigation}) => {\n          return {\n            headerLeft: () => <LeftIcon navigation={navigation} />,\n            headerRight: () => <RightIcon navigation={navigation}/>\n          }\n        }\n      }\n    },\n    {\n      defaultNavigationOptions: defaultNavOptions\n    }),\n\n  },\n  {\n    drawerType: 'back',\n    contentComponent: SideBar,\n    defaultNavigationOptions: {\n      drawerLockMode: 'locked-closed'\n    },\n    // gestureEnabled: false,\n    // drawerLockMode: 'locked-closed'\n    // drawerPosition: ''\n  })\n  // loggediFlow: createStackNavigator({\n  //   Dashboard: dashboardScreen,\n  //   TestRecord: testRecordScreen,\n  //   TestShow: TestShowScreen,\n  //   RecentDetails: recentDetails\n  // }, \n  // {\n  //   // initialRouteName: 'Dashboard',\n  //   defaultNavigationOptions: defaultNavOptions\n  // })\n})\n\n// export default createAppContainer(navigator)\n\nconst App = createAppContainer(switchNavigator)\nexport default ()=> {\n  return (\n    <AuthProvider>\n      <TestProvider>\n        <App ref={(navigator)=>{setNavigator(navigator)}} />\n      </TestProvider>\n    </AuthProvider>\n  )\n}"],"sourceRoot":""}